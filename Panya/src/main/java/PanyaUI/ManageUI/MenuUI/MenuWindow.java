
package PanyaUI.ManageUI.MenuUI;

import PanyaUI.ApplicationWindow;

import PanyaUI.PanyaContentPanel;
import PanyaUI.Theme;
import java.awt.Color;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JSpinner;
import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;

/**
 *
 * @author Dao Le Viet Hoang
 */

public class MenuWindow extends javax.swing.JPanel implements PanyaContentPanel {

    /**
     *
     */
    private static final long serialVersionUID = 3424060310827836268L;
    Color primaryColor;
    Color darkColor;
    Color lightColor;
    Color primaryTextColor;
    Color lightTextColor;
    Color darkTextColor;

        //data
        private List<PanyaCore.Menu> menuData = ApplicationWindow.getMenu();

    /**
     * Chỉnh màu cho window theo phổ màu đưa vào
     * 
     * @param themeName String được lấy từ PanyaUI.Theme.getTheme
     * @see PanyaUI.Theme#getTheme(String)
     */
    public void initTheme(String themeName) {
        var theme = new Theme().getTheme(themeName);
        if (theme == null) {
            return;
        }

        final var PRIMARY = theme.get(Theme.PRIMARY);
        final var LIGHT = theme.get(Theme.LIGHT);
        final var DARK = theme.get(Theme.DARK);

        this.initTheme(PRIMARY, LIGHT, DARK);
    }
    
        /**
     * Set màu cho window theo phổ màu đưa vào. Tham số đưa vào gồm 3 loại màu:
     * chính, nhạt, đậm. Tham khảo tại <a href=
     * "https://material.io/resources/color">https://material.io/resources/color</a>
     * 
     * @param primary
     * @param light
     * @param dark
     */
    public void initTheme(Color primary, Color light, Color dark) {
        if (primary == null || light == null || dark == null) {
            return;
        }
        this.primaryColor = primary;
        this.darkColor = dark;
        this.lightColor = light;

        this.primaryTextColor = Theme.textColorFromBackgroundColor(primary);
        this.darkTextColor = Theme.textColorFromBackgroundColor(dark);
        this.lightTextColor = Theme.textColorFromBackgroundColor(light);

        this.bottomHeaderPanel.setBackground(lightColor);
        this.contentHeaderLabel.setForeground(primaryTextColor);
        this.contentHeaderPanel.setBackground(primaryColor);
        // this.contentPanel;
        // this.outerContentPanel;

    }

    /**
     * Creates new form OuterContentPanel
     */
    public MenuWindow() {
        setListMaxQuantity(menuData);
        initComponents();
    }

    public MenuWindow(Color primary, Color light, Color dark) {
        setListMaxQuantity(menuData);
        initComponents();
        initTheme(primary, light, dark);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        contentHeaderPanel = new javax.swing.JPanel();
        contentHeaderLabel = new javax.swing.JLabel();
        bottomHeaderPanel = new javax.swing.JPanel();
        addButon = new javax.swing.JButton();
        deleteButon = new javax.swing.JButton();
        updataButon = new javax.swing.JButton();
        saleOffButon = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        searchButon = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        contentPanel = new javax.swing.JPanel();

        //



        setMinimumSize(new java.awt.Dimension(600, 600));
        setLayout(new java.awt.GridBagLayout());

        contentHeaderPanel.setBackground(new java.awt.Color(33, 150, 243));
        contentHeaderPanel.setMinimumSize(new java.awt.Dimension(600, 100));

        contentHeaderLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        contentHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        contentHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contentHeaderLabel.setText("PANYA MENU");

        javax.swing.GroupLayout contentHeaderPanelLayout = new javax.swing.GroupLayout(contentHeaderPanel);
        contentHeaderPanel.setLayout(contentHeaderPanelLayout);
        contentHeaderPanelLayout.setHorizontalGroup(
            contentHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE)
        );
        contentHeaderPanelLayout.setVerticalGroup(
            contentHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        add(contentHeaderPanel, gridBagConstraints);

        bottomHeaderPanel.setBackground(new java.awt.Color(110, 198, 255));
        bottomHeaderPanel.setMinimumSize(new java.awt.Dimension(600, 50));
        bottomHeaderPanel.setPreferredSize(new java.awt.Dimension(600, 50));

        addButon.setBackground(new java.awt.Color(0, 153, 102));
        addButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addButon.setForeground(new java.awt.Color(255, 255, 255));
        addButon.setText("Add");
        addButon.setBorder(null);
        addButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButonActionPerformed(evt);
            }
        });

        deleteButon.setBackground(new java.awt.Color(0, 153, 102));
        deleteButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        deleteButon.setForeground(new java.awt.Color(255, 255, 255));
        deleteButon.setText("Delete");
        deleteButon.setBorder(null);

        updataButon.setBackground(new java.awt.Color(0, 153, 102));
        updataButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        updataButon.setForeground(new java.awt.Color(255, 255, 255));
        updataButon.setText("Update");
        updataButon.setBorder(null);

        saleOffButon.setBackground(new java.awt.Color(255, 153, 0));
        saleOffButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        saleOffButon.setForeground(new java.awt.Color(255, 255, 255));
        saleOffButon.setText("Sale Off");
        saleOffButon.setBorder(null);

        searchPanel.setPreferredSize(new java.awt.Dimension(160, 40));

        searchButon.setBackground(new java.awt.Color(0, 153, 102));
        searchButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        searchButon.setForeground(new java.awt.Color(255, 255, 255));
        searchButon.setText("Search");
        searchButon.setBorder(null);
        searchButon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButonActionPerformed(evt);
            }
        });

        searchTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchTextField.setToolTipText("");
        searchTextField.setAutoscrolls(false);
        searchTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 51), 2));
        searchTextField.setDoubleBuffered(true);
        searchTextField.setDragEnabled(true);
        searchTextField.setMaximumSize(new java.awt.Dimension(32767, 32767));
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(searchButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(searchButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout bottomHeaderPanelLayout = new javax.swing.GroupLayout(bottomHeaderPanel);
        bottomHeaderPanel.setLayout(bottomHeaderPanelLayout);
        bottomHeaderPanelLayout.setHorizontalGroup(
            bottomHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomHeaderPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(addButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(deleteButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(updataButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(saleOffButon, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );
        bottomHeaderPanelLayout.setVerticalGroup(
            bottomHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomHeaderPanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(bottomHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(saleOffButon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bottomHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteButon, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addButon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updataButon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        add(bottomHeaderPanel, gridBagConstraints);

        contentPanel.setBackground(java.awt.Color.white);
        contentPanel.setMinimumSize(new java.awt.Dimension(600, 400));
        contentPanel.setPreferredSize(new java.awt.Dimension(600, 400));



        //hoi chen
        
        javax.swing.JScrollPane itemScrollPanel = createItemMenuPanel(menuData);
        //subItemScrollPanel.setViewportView(subItemPanel);
        javax.swing.JPanel paymentPanel = createPaymentPanel();


        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addComponent(itemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subItemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addComponent(paymentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(itemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addComponent(subItemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(paymentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(contentPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    private BigDecimal caculateOriginalPrice(List<PanyaCore.Menu> dataAdd)
    {
        BigDecimal result = new BigDecimal("");
        for(int i = 0; i < dataAdd.size(); i++)
        {
            //result.add(dataAdd.)
        }

        return result;
    }
    private void calculatorPayment()
    {
        double totalPayment = 0.0;
        if(subItemPanel.getComponentCount() != 0)
        {
            java.awt.Component[] spParent = subItemPanel.getComponents();
            java.awt.Component[] spChildrenOut = new java.awt.Component[1];
            String price = "";
            int quantity = 0;
            for(java.awt.Component spPanel: spParent)
            {
                int flagPrice = 0, flagQuantity = 0;
                if(spPanel instanceof javax.swing.JPanel)
                {
                    java.awt.Component[] spChildren = ((javax.swing.JPanel)spPanel).getComponents();
                    for (java.awt.Component spChild : spChildren) {
                        if (spChild instanceof javax.swing.JLabel) {
                            String text = ((javax.swing.JLabel)spChild).getText();
                            if(text.contains("Price:"))
                            {
                                String[] txtSplit = text.split(": ");
                                price = txtSplit[1];
                                flagPrice = 1;
                            }
                            
                        }
                        if(spChild instanceof javax.swing.JSpinner)
                        {
                            quantity = (int)((javax.swing.JSpinner)spChild).getValue();
                            flagQuantity = 1;
                        }
                        if(flagPrice == 1 && flagQuantity == 1)
                        {
                            double priceDouble = Double.parseDouble(price);
                            totalPayment += quantity * priceDouble;
                            java.awt.Component[] componentOfPayment = paymentPanel.getComponents();
                            // DecimalFormat df = new DecimalFormat("#.#");
                            for(java.awt.Component COP: componentOfPayment)
                            {   
                                if(COP instanceof javax.swing.JLabel)
                                {
                                    ((javax.swing.JLabel)COP).setText("Total Payment: " +  (String.format("%.3f", totalPayment)).replace(".", "") + " (VNĐ)");
                                }
                            }
                            break;
                        }
                    }
                }
            }
            
        }
        else
        {
            java.awt.Component[] componentOfPayment = paymentPanel.getComponents();
            // DecimalFormat df = new DecimalFormat("#.#");
            for(java.awt.Component COP: componentOfPayment)
            {   
                if(COP instanceof javax.swing.JLabel)
                {
                    ((javax.swing.JLabel)COP).setText("Total Payment: " + " (VNĐ)");
                }
            }
        }
        paymentPanel.repaint();
    }
    private javax.swing.JPanel createPaymentPanel()
    {
         javax.swing.JLabel totalPaymentLabel = new javax.swing.JLabel();
         javax.swing.JButton payButton = new javax.swing.JButton();

        paymentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        totalPaymentLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        totalPaymentLabel.setForeground(new java.awt.Color(255, 102, 0));
        totalPaymentLabel.setText("Total Payment: ");

        payButton.setBackground(new java.awt.Color(0, 153, 153));
        payButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        payButton.setForeground(new java.awt.Color(255, 255, 255));
        payButton.setText("PAY");
        payButton.setBorder(null);
        payButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentPanelLayout = new javax.swing.GroupLayout(paymentPanel);
        paymentPanel.setLayout(paymentPanelLayout);
        paymentPanelLayout.setHorizontalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentPanelLayout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(totalPaymentLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paymentPanelLayout.setVerticalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(totalPaymentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        return paymentPanel;
    }
    private void createItemAddMenuPanel(PanyaCore.Menu data, int indexOfThisPanel)
    {
        subItemScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        subItemScrollPanel.setPreferredSize(new java.awt.Dimension(130, 400));

        subItemPanel.setLayout(new BoxLayout(subItemPanel, BoxLayout.Y_AXIS));
        subItemPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));

        java.awt.Component[] spParent = subItemPanel.getComponents();
        java.awt.Component[] spChildrenOut = new java.awt.Component[1];
        int check = 0;
        for(java.awt.Component spPanel: spParent)
        {
            if(spPanel instanceof javax.swing.JPanel)
            {
                java.awt.Component[] spChildren = ((javax.swing.JPanel)spPanel).getComponents();
                for (java.awt.Component spChild : spChildren) {
                    if (spChild instanceof javax.swing.JLabel) {
                        String text = ((javax.swing.JLabel)spChild).getText();
                        if(text.compareTo(data.getProducts().get(indexOfThisPanel).getName()) == 0)
                        {
                            spChildrenOut = spChildren;
                            //System.out.println(text);
                            check = 1;
                            break;
                        }
                    }
                }
            }
        }
        if(check == 1)
        {
            for (java.awt.Component spChild : spChildrenOut) {
                if (spChild instanceof javax.swing.JSpinner) {
                    int value = (int)((javax.swing.JSpinner)spChild).getValue();
                    ((javax.swing.JSpinner)spChild).setValue(++value);
                    return;
                }
            }
        }
        javax.swing.JPanel containItemAddMenuPanel = new javax.swing.JPanel();
        javax.swing.JLabel nameItemAddMenuLabel = new javax.swing.JLabel();
        javax.swing.JLabel priceItemAddMenuLabel = new javax.swing.JLabel();
        javax.swing.JButton deleteItemAddMenuButton = new javax.swing.JButton();
        javax.swing.JSpinner slItemAddMenuSpinner = new javax.swing.JSpinner();
        javax.swing.GroupLayout containItemAddMenuPanelLayout;
            containItemAddMenuPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            containItemAddMenuPanel.setPreferredSize(new java.awt.Dimension(207, 45));
    
            nameItemAddMenuLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            nameItemAddMenuLabel.setText(data.getProducts().get(indexOfThisPanel).getName());
    
            deleteItemAddMenuButton.setBackground(new java.awt.Color(255, 51, 0));
            deleteItemAddMenuButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
            deleteItemAddMenuButton.setForeground(new java.awt.Color(255, 255, 255));
            deleteItemAddMenuButton.setText("DEL");
            deleteItemAddMenuButton.setBorder(null);
            deleteItemAddMenuButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    deleteItemAddMenuButtonActionPerformed(evt);
                }
            });

            priceItemAddMenuLabel.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
            priceItemAddMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            double priceOri = Double.parseDouble(data.getProducts().get(indexOfThisPanel).getPriceString());
            double pricePro = Double.parseDouble(data.getProducts().get(indexOfThisPanel).getSellOffString()) * priceOri;
            priceItemAddMenuLabel.setText("Price: " +  (priceOri - pricePro));
    
            slItemAddMenuSpinner.setModel(new javax.swing.SpinnerNumberModel(countSL, 0, (int)listMaxQuantity.get(indexOfThisPanel), 1));
            slItemAddMenuSpinner.addChangeListener(new ChangeListener(){
                @Override
                public void stateChanged(ChangeEvent e) {
                    JSpinner pinner = slItemAddMenuSpinner;
                    int value = (int)pinner.getValue();
                    java.awt.Component[] spChildren = pinner.getParent().getComponents();
                    // now iterate over all JTextFields...
                    String name = "";
                    for (java.awt.Component spChild : spChildren) {
                        if (spChild instanceof javax.swing.JLabel) {
                            String text = ((javax.swing.JLabel)spChild).getText();
                            if(text.contains("Price") == false)
                            {
                                name = text;
                            }
                        }
                    }
            
                    java.awt.Component[] spFather = itemPanel.getComponents();
                    java.awt.Component spMother = new javax.swing.JPanel();
                    int check = 0;
                    int indexOfThisPanel = 0;
                    for(java.awt.Component spFa: spFather)
                    {
                        if(spFa instanceof javax.swing.JPanel)
                        {
                            java.awt.Component[] childrens = ((javax.swing.JPanel)spFa).getComponents();
                            for(java.awt.Component child:childrens)
                            {
                                if(child instanceof javax.swing.JLabel)
                                {
                                    String nameCake = ((javax.swing.JLabel)child).getText();
                                    if(nameCake.compareTo(name) == 0)
                                    {
                                        spMother = spFa;
                                        var xOfThisPanel = (int)((spFa.getX()));
                                        var yOfThisPanel = (int)((spFa.getY())); //53 la khoang cach giua cac component
                                        //System.out.println(xOfThisPanel + " " + yOfThisPanel); //y cach nhau 255, x cot1:5 cot2:362
                                        var getColumn = (xOfThisPanel == 5 ? 1 : 2);
                                        if(getColumn == 1)
                                        {
                                            indexOfThisPanel = 2 * (int)((yOfThisPanel-5)/255);
                                        }
                                        if(getColumn == 2)
                                        {
                                            indexOfThisPanel = 2 * (int)((yOfThisPanel-5)/255) + 1;
                                        }
                                        check = 1;
                                        //System.out.println("SL: " + value + " Name: " + nameCake);

                                        break;
                                    }
                                }
                            }
                        }
                        if(check == 1)
                        {
                            break;
                        }
                    }
                    if(check == 1)
                    {
                        java.awt.Component[] childrens = ((javax.swing.JPanel)spMother).getComponents();
                        for(java.awt.Component child: childrens)
                        {
                            if(child instanceof javax.swing.JLabel)
                            {
                                String txt = ((javax.swing.JLabel)child).getText();
                                if(txt.contains("SL"))
                                {
                                    ((javax.swing.JLabel)child).setText("SL: " + ((int)listMaxQuantity.get(indexOfThisPanel) - value));
                                    calculatorPayment();
                                    return;
                                }
                            }
                        }
                    }

                }
            });
            // .addActionListener(new java.awt.event.ActionListener() {
            //     public void mousactionPerformedeClicked(java.awt.event.ActionEvent evt) {
            //         slItemAddMenuSpinnerMouseClicked(evt);
            //     }
            // });

            containItemAddMenuPanelLayout = new javax.swing.GroupLayout(containItemAddMenuPanel);
            containItemAddMenuPanel.setLayout(containItemAddMenuPanelLayout);
            containItemAddMenuPanelLayout.setHorizontalGroup(
                containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(containItemAddMenuPanelLayout.createSequentialGroup()
                    .addGroup(containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(slItemAddMenuSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(containItemAddMenuPanelLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(deleteItemAddMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(priceItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            );
            containItemAddMenuPanelLayout.setVerticalGroup(
                containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(containItemAddMenuPanelLayout.createSequentialGroup()
                    .addGroup(containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteItemAddMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(priceItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(slItemAddMenuSpinner)))
            );

        subItemPanel.add(containItemAddMenuPanel);
        subItemPanel.add(Box.createVerticalStrut(5));
        subItemScrollPanel.setViewportView(subItemPanel);
    }
    private javax.swing.JScrollPane createItemMenuPanel(List<PanyaCore.Menu> menuData)
    {

        itemScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        itemScrollPanel.setPreferredSize(new java.awt.Dimension(130, 400));


        List<javax.swing.JPanel> containItemPanel = new ArrayList<javax.swing.JPanel>();
        List<javax.swing.JLabel> nameItemLabel = new ArrayList<javax.swing.JLabel>();
        List<javax.swing.JLabel> imgItemLabel = new ArrayList<javax.swing.JLabel>();
        List<javax.swing.JLabel> priceItemLabel = new ArrayList<javax.swing.JLabel>();
        List<javax.swing.JButton> addItemButton = new ArrayList<javax.swing.JButton>();
        List<javax.swing.JLabel> slItemLabel = new ArrayList<javax.swing.JLabel>();
        List<javax.swing.JLabel> saleLabel = new ArrayList<javax.swing.JLabel>();
        List<javax.swing.GroupLayout> itemPanelLayout = new ArrayList<javax.swing.GroupLayout>();

        containItemPanel.clear();
        for(int i = 0; i < menuData.get(0).getProducts().size(); i++)
        {
            containItemPanel.add(new javax.swing.JPanel());
            containItemPanel.get(i).setBackground(new java.awt.Color(255, 255, 255));
            containItemPanel.get(i).setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
            containItemPanel.get(i).setPreferredSize(new java.awt.Dimension(210, 250));

            nameItemLabel.add(new javax.swing.JLabel());
            nameItemLabel.get(i).setBackground(new java.awt.Color(255, 255, 255));
            nameItemLabel.get(i).setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            nameItemLabel.get(i).setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            nameItemLabel.get(i).setText(menuData.get(0).getProducts().get(i).getName());
            nameItemLabel.get(i).setOpaque(true);

            imgItemLabel.add(new javax.swing.JLabel());
            imgItemLabel.get(i).setBackground(new java.awt.Color(204, 204, 204));
            imgItemLabel.get(i).setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            imgItemLabel.get(i).setIcon(new javax.swing.ImageIcon(menuData.get(0).getProducts().get(i).getImage())); // NOI18N
            imgItemLabel.get(i).setOpaque(true);

            priceItemLabel.add(new javax.swing.JLabel());
            priceItemLabel.get(i).setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
            priceItemLabel.get(i).setForeground(new java.awt.Color(0, 153, 153));
            priceItemLabel.get(i).setText("Price: " + menuData.get(0).getProducts().get(i).getPriceString());

            addItemButton.add(new javax.swing.JButton());
            addItemButton.get(i).setBackground(new java.awt.Color(255, 204, 51));
            addItemButton.get(i).setText("ADD");
            addItemButton.get(i).setBorder(null);
            addItemButton.get(i).addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    item1AddButtonActionPerformed(evt);
                }
            });
            
            slItemLabel.add(new javax.swing.JLabel());
            slItemLabel.get(i).setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            slItemLabel.get(i).setText("SL: " + menuData.get(0).getProducts().get(i).getQuantity());

            saleLabel.add(new javax.swing.JLabel());
            saleLabel.get(i).setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
            saleLabel.get(i).setForeground(new java.awt.Color(255, 0, 51));
            saleLabel.get(i).setText("Sale: " + menuData.get(0).getProducts().get(i).getSellOffString());

            itemPanelLayout.add(new javax.swing.GroupLayout(containItemPanel.get(i)));
            containItemPanel.get(i).setLayout(itemPanelLayout.get(i));
            itemPanelLayout.get(i).setHorizontalGroup(
                itemPanelLayout.get(i).createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(itemPanelLayout.get(i).createSequentialGroup()
                    .addContainerGap()
                    .addGroup(itemPanelLayout.get(i).createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(itemPanelLayout.get(i).createSequentialGroup()
                            .addComponent(priceItemLabel.get(i), javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(0, 0, 0)
                            .addComponent(addItemButton.get(i), javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(itemPanelLayout.get(i).createSequentialGroup()
                            .addComponent(nameItemLabel.get(i), javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) //cho nay fix size 30 = 186, 236, 
                            .addComponent(saleLabel.get(i))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(slItemLabel.get(i), javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(imgItemLabel.get(i), javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap())
            );
            itemPanelLayout.get(i).setVerticalGroup(
                itemPanelLayout.get(i).createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(itemPanelLayout.get(i).createSequentialGroup()
                    .addGroup(itemPanelLayout.get(i).createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameItemLabel.get(i), javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(saleLabel.get(i))
                        .addComponent(slItemLabel.get(i)))
                    .addGap(0, 0, 0)                            ////.addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(imgItemLabel.get(i), javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)
                    .addGroup(itemPanelLayout.get(i).createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addItemButton.get(i), javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(priceItemLabel.get(i), javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
            );
        }
        java.awt.GridLayout layout = new java.awt.GridLayout(0,2);
        layout.setHgap(5);
        layout.setVgap(5);
        itemPanel.setLayout(layout);
        for(int i = 0; i < containItemPanel.size(); i++)
        {
            itemPanel.add(containItemPanel.get(i));
        }
        itemPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        
        itemScrollPanel.setViewportView(itemPanel);
        return itemScrollPanel;
    }
    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void searchButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButonActionPerformed

    private void deleteItemAddMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemAddMenuButtonActionPerformed
        // TODO add your handling code here:
        JButton button = (JButton)evt.getSource();
        var indexOfThisPanel = (int)((button.getParent().getY() - 5)/53); //53 la khoang cach giua cac component
        //System.out.println(indexOfThisPanel);

        java.awt.Component[] spChildren = button.getParent().getComponents();
        int quantity = 0;
        String name = "";
        for (java.awt.Component spChild : spChildren) {
            if (spChild instanceof javax.swing.JSpinner) 
            {
                quantity = (int)((javax.swing.JSpinner)spChild).getValue();
            }
            if(spChild instanceof javax.swing.JLabel)
            {
                String getLabel = ((javax.swing.JLabel)spChild).getText();
                if(getLabel.contains("Price") == false)
                {
                    name = getLabel;
                }
            }
        }

        java.awt.Component[] spParent = itemPanel.getComponents();
        java.awt.Component[] spChildrenOut = new java.awt.Component[1];
        int check = 0;
        for(java.awt.Component spPanel: spParent)
        {
            if(spPanel instanceof javax.swing.JPanel)
            {
                java.awt.Component[] childrens = ((javax.swing.JPanel)spPanel).getComponents();
                for (java.awt.Component spChild : childrens) {
                    if (spChild instanceof javax.swing.JLabel) {
                        String text = ((javax.swing.JLabel)spChild).getText();
                        if(text.compareTo(name) == 0)
                        {
                            spChildrenOut = childrens;
                           // System.out.println(text);
                            check = 1;
                            break;
                        }
                    }
                }
            }
        }
        if(check == 1)
        {
            for (java.awt.Component spChild : spChildrenOut) {
                if(spChild instanceof javax.swing.JLabel)
                {
                    String getLabel = ((javax.swing.JLabel)spChild).getText();
                    if(getLabel.contains("SL:") == true)
                    {
                        String[] tempQuantity = getLabel.split(": ");
                        int value = Integer.parseInt(tempQuantity[1]);
                        ((javax.swing.JLabel)spChild).setText("SL: " + (value + quantity));
                    }
                }
            }
        }

        if(subItemPanel.getComponentCount() == 1)
        {
            subItemPanel.remove(indexOfThisPanel);
            subItemPanel.remove(indexOfThisPanel);

        }
        else
        {
            subItemPanel.remove(indexOfThisPanel*2);
            subItemPanel.remove(indexOfThisPanel*2);
        }
        subItemScrollPanel.setViewportView(subItemPanel);
        calculatorPayment();
    }//GEN-LAST:event_deleteItemAddMenuButtonActionPerformed
    private void addButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addButonActionPerformed
    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        java.awt.Component[] spParent = itemPanel.getComponents();
        List<PanyaCore.Product> products = PanyaCore.Product.readProductList("Panya/src/main/resources/data/ManageData/ProductFile.json");
        int check = 0;
        for(java.awt.Component spPanel: spParent)
        {
            if(spPanel instanceof javax.swing.JPanel)
            {
                var xOfThisPanel = (int)((spPanel.getX()));
                var yOfThisPanel = (int)((spPanel.getY())); //53 la khoang cach giua cac component
                //System.out.println(xOfThisPanel + " " + yOfThisPanel); //y cach nhau 255, x cot1:5 cot2:362
                var getColumn = (xOfThisPanel == 5 ? 1 : 2);
                int indexOfThisPanel = 0;
                if(getColumn == 1)
                {
                    indexOfThisPanel = 2 * (int)((yOfThisPanel-5)/255);
                }
                if(getColumn == 2)
                {
                    indexOfThisPanel = 2 * (int)((yOfThisPanel-5)/255) + 1;
                }
                java.awt.Component[] childrens = ((javax.swing.JPanel)spPanel).getComponents();
                for (java.awt.Component spChild : childrens) {
                    if (spChild instanceof javax.swing.JLabel) {
                        String text = ((javax.swing.JLabel)spChild).getText();
                        if(text.contains("SL:") == true)
                        {
                            String[] txtSplit = text.split(": ");
                            //System.out.println(txtSplit[1]);
                            int quantity = Integer.parseInt(txtSplit[1]);
                            menuData.get(0).getProducts().get(indexOfThisPanel).setQuantity(quantity);
                            products.get(indexOfThisPanel).setQuantity(quantity);
                            //System.out.println(products.get(indexOfThisPanel).getQuantity());
                            //System.out.println(menuData.get(0).getProducts().get(indexOfThisPanel).getQuantity());
                            break;
                        }
                    }
                }                
            }
        }
        //Nhớ mở lên khi nộp bài, hoặc báo cáo đồ án.
        PanyaCore.Menu.saveCustomProductList("Panya/src/main/resources/data/ManageData/MenuFile.json", menuData);
        PanyaCore.Product.saveProductList("Panya/src/main/resources/data/ManageData/ProductFile.json", products);
        subItemPanel.removeAll();
        subItemScrollPanel.setViewportView(subItemPanel);
        JButton button = (JButton)evt.getSource();
        java.awt.Component[] spChildren = button.getParent().getComponents();
        for(java.awt.Component spC: spChildren)
        {
            if(spC instanceof javax.swing.JLabel)
            {
                ((javax.swing.JLabel)spC).setText("Total Payment: (VNĐ)");
            }
        }
    }   
    private void item1AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item1AddButtonActionPerformed
        JButton button = (JButton)evt.getSource();
        var xOfThisPanel = (int)((button.getParent().getX()));
        var yOfThisPanel = (int)((button.getParent().getY())); //53 la khoang cach giua cac component
        //System.out.println(xOfThisPanel + " " + yOfThisPanel); //y cach nhau 255, x cot1:5 cot2:362
        var getColumn = (xOfThisPanel == 5 ? 1 : 2);
        int indexOfThisPanel = 0;
        if(getColumn == 1)
        {
            indexOfThisPanel = 2 * (int)((yOfThisPanel-5)/255);
        }
        if(getColumn == 2)
        {
            indexOfThisPanel = 2 * (int)((yOfThisPanel-5)/255) + 1;
        }
        //System.out.println(indexOfThisPanel);
        java.awt.Component[] spChildren = button.getParent().getComponents();
        // now iterate over all JTextFields...
        String quantity = "";
        for (java.awt.Component spChild : spChildren) {
            if (spChild instanceof javax.swing.JLabel) {
                String text = ((javax.swing.JLabel)spChild).getText();
                if(text.contains("SL:"))
                {
                    String[] slCut = text.split(": ");
                    quantity = slCut[1];
                    if(quantity.compareTo("0") == 0)
                    {
                        // itemPanel.remove(indexOfThisPanel);
                        // menuData.get(0).getProducts().remove(indexOfThisPanel);
                        itemScrollPanel.setViewportView(itemPanel);
                        return;
                    }
                    ((javax.swing.JLabel)spChild).setText("SL: " + (Integer.parseInt(quantity)-1));
                }
            }
        }

        createItemAddMenuPanel(menuData.get(0), indexOfThisPanel);
        calculatorPayment();
    }//GEN-LAST:event_item1AddButtonActionPerformed
    public void setListMaxQuantity(List<PanyaCore.Menu> data)
    {   
        for(int i = 0; i < data.get(0).getProducts().size(); i++)
        {
            listMaxQuantity.add(data.get(0).getProducts().get(i).getQuantity());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButon;
    private javax.swing.JPanel bottomHeaderPanel;
    private javax.swing.JLabel contentHeaderLabel;
    private javax.swing.JPanel contentHeaderPanel;

    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton deleteButon;
    //private javax.swing.JScrollPane itemScrollPanel;
    private javax.swing.JButton saleOffButon;
    private javax.swing.JButton searchButon;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;

    private List<PanyaCore.Menu> dataCart = new ArrayList<PanyaCore.Menu>();
    static int countSL = 1;

    //private javax.swing.JScrollPane subItemScrollPanel;
    private javax.swing.JButton updataButon;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JPanel subItemPanel = new javax.swing.JPanel();
    private javax.swing.JScrollPane subItemScrollPanel = new javax.swing.JScrollPane();

    private javax.swing.JPanel itemPanel = new javax.swing.JPanel();
    private javax.swing.JScrollPane itemScrollPanel = new javax.swing.JScrollPane();
    List<Integer> listMaxQuantity = new ArrayList<Integer>();

    private javax.swing.JPanel paymentPanel = new javax.swing.JPanel();
}
