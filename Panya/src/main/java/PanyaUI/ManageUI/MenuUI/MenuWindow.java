
package PanyaUI.ManageUI.MenuUI;

import PanyaUI.ApplicationWindow;

import PanyaUI.PanyaContentPanel;
import PanyaUI.Theme;

import java.awt.Color;
import java.io.File;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.event.ChangeListener;

import PanyaCore.History;
import PanyaCore.Product;

import javax.swing.event.ChangeEvent;

/**
 *
 * @author Dao Le Viet Hoang
 */

public class MenuWindow extends javax.swing.JPanel implements PanyaContentPanel {

    /**
     *
     */
    private static final long serialVersionUID = 3424060310827836268L;
    Color primaryColor;
    Color darkColor;
    Color lightColor;
    Color primaryTextColor;
    Color lightTextColor;
    Color darkTextColor;

    // data
    private List<PanyaCore.Product> products = PanyaCore.Product
            .readProductList("Panya/src/main/resources/data/ManageData/ProductFile.json");
    private List<PanyaCore.Menu> menuData = ApplicationWindow.getMenu();

    /**
     * Chỉnh màu cho window theo phổ màu đưa vào
     * 
     * @param themeName String được lấy từ PanyaUI.Theme.getTheme
     * @see PanyaUI.Theme#getTheme(String)
     */
    public void initTheme(String themeName) {
        var theme = new Theme().getTheme(themeName);
        if (theme == null) {
            return;
        }

        final var PRIMARY = theme.get(Theme.PRIMARY);
        final var LIGHT = theme.get(Theme.LIGHT);
        final var DARK = theme.get(Theme.DARK);

        this.initTheme(PRIMARY, LIGHT, DARK);
    }

    /**
     * Set màu cho window theo phổ màu đưa vào. Tham số đưa vào gồm 3 loại màu:
     * chính, nhạt, đậm. Tham khảo tại <a href=
     * "https://material.io/resources/color">https://material.io/resources/color</a>
     * 
     * @param primary
     * @param light
     * @param dark
     */
    public void initTheme(Color primary, Color light, Color dark) {
        if (primary == null || light == null || dark == null) {
            return;
        }
        this.primaryColor = primary;
        this.darkColor = dark;
        this.lightColor = light;

        this.primaryTextColor = Theme.textColorFromBackgroundColor(primary);
        this.darkTextColor = Theme.textColorFromBackgroundColor(dark);
        this.lightTextColor = Theme.textColorFromBackgroundColor(light);

        this.bottomHeaderPanel.setBackground(lightColor);
        this.contentHeaderLabel.setForeground(primaryTextColor);
        this.contentHeaderPanel.setBackground(primaryColor);
        // this.contentPanel;
        // this.outerContentPanel;

    }

    /**
     * Creates new form OuterContentPanel
     */
    public MenuWindow() {
        setListMaxQuantity(menuData);
        initComponents();
        this.itemScrollPanel.getVerticalScrollBar().setUnitIncrement(16);

    }

    public MenuWindow(Color primary, Color light, Color dark) {
        setListMaxQuantity(menuData);
        initComponents();
        initTheme(primary, light, dark);
        this.itemScrollPanel.getVerticalScrollBar().setUnitIncrement(16);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        contentHeaderPanel = new javax.swing.JPanel();
        contentHeaderLabel = new javax.swing.JLabel();
        bottomHeaderPanel = new javax.swing.JPanel();
        addButon = new javax.swing.JButton();
        deleteButon = new javax.swing.JButton();
        updataButon = new javax.swing.JButton();
        saleOffButon = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        searchButon = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        contentPanel = new javax.swing.JPanel();

        //

        setMinimumSize(new java.awt.Dimension(600, 600));
        setLayout(new java.awt.GridBagLayout());

        contentHeaderPanel.setBackground(new java.awt.Color(33, 150, 243));
        contentHeaderPanel.setMinimumSize(new java.awt.Dimension(600, 100));

        contentHeaderLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        contentHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        contentHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contentHeaderLabel.setText("PANYA MENU");

        javax.swing.GroupLayout contentHeaderPanelLayout = new javax.swing.GroupLayout(contentHeaderPanel);
        contentHeaderPanel.setLayout(contentHeaderPanelLayout);
        contentHeaderPanelLayout.setHorizontalGroup(
                contentHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(contentHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE));
        contentHeaderPanelLayout.setVerticalGroup(
                contentHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(contentHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        add(contentHeaderPanel, gridBagConstraints);

        bottomHeaderPanel.setBackground(new java.awt.Color(110, 198, 255));
        bottomHeaderPanel.setMinimumSize(new java.awt.Dimension(600, 50));
        bottomHeaderPanel.setPreferredSize(new java.awt.Dimension(600, 50));

        addButon.setBackground(new java.awt.Color(0, 153, 102));
        addButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addButon.setForeground(new java.awt.Color(255, 255, 255));
        addButon.setText("Add");
        addButon.setBorder(null);
        addButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButonActionPerformed(evt);
            }
        });

        deleteButon.setBackground(new java.awt.Color(0, 153, 102));
        deleteButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        deleteButon.setForeground(new java.awt.Color(255, 255, 255));
        deleteButon.setText("Delete");
        deleteButon.setBorder(null);
        deleteButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButonActionPerformed(evt);
            }
        });

        updataButon.setBackground(new java.awt.Color(0, 153, 102));
        updataButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        updataButon.setForeground(new java.awt.Color(255, 255, 255));
        updataButon.setText("Update");
        updataButon.setBorder(null);
        updataButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updataButonActionPerformed(evt);
            }
        });

        saleOffButon.setBackground(new java.awt.Color(255, 153, 0));
        saleOffButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        saleOffButon.setForeground(new java.awt.Color(255, 255, 255));
        saleOffButon.setText("Sale Off");
        saleOffButon.setBorder(null);
        saleOffButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saleOffButonActionPerformed(evt);
            }
        });

        searchPanel.setPreferredSize(new java.awt.Dimension(160, 40));

        searchButon.setBackground(new java.awt.Color(0, 153, 102));
        searchButon.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        searchButon.setForeground(new java.awt.Color(255, 255, 255));
        searchButon.setText("Search");
        searchButon.setBorder(null);
        searchButon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButonActionPerformed(evt);
            }
        });

        searchTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchTextField.setToolTipText("");
        searchTextField.setAutoscrolls(false);
        searchTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 51), 2));
        searchTextField.setDoubleBuffered(true);
        searchTextField.setDragEnabled(true);
        searchTextField.setMaximumSize(new java.awt.Dimension(32767, 32767));

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(searchPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                        .addGap(0, 0, 0).addComponent(searchButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                                javax.swing.GroupLayout.PREFERRED_SIZE)));
        searchPanelLayout
                .setVerticalGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchButon, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        javax.swing.GroupLayout bottomHeaderPanelLayout = new javax.swing.GroupLayout(bottomHeaderPanel);
        bottomHeaderPanel.setLayout(bottomHeaderPanelLayout);
        bottomHeaderPanelLayout.setHorizontalGroup(bottomHeaderPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomHeaderPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(addButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(deleteButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(updataButon, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .addGap(18, 18, 18).addComponent(saleOffButon, javax.swing.GroupLayout.PREFERRED_SIZE, 66,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)));
        bottomHeaderPanelLayout.setVerticalGroup(
                bottomHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                        javax.swing.GroupLayout.Alignment.TRAILING,
                        bottomHeaderPanelLayout.createSequentialGroup().addGap(3, 3, 3).addGroup(bottomHeaderPanelLayout
                                .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                                .addComponent(saleOffButon, javax.swing.GroupLayout.Alignment.LEADING,
                                        javax.swing.GroupLayout.PREFERRED_SIZE, 41,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(bottomHeaderPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(deleteButon, javax.swing.GroupLayout.PREFERRED_SIZE, 39,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addButon, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(updataButon, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(6, 6, 6)));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        add(bottomHeaderPanel, gridBagConstraints);

        contentPanel.setBackground(java.awt.Color.white);
        contentPanel.setMinimumSize(new java.awt.Dimension(600, 400));
        contentPanel.setPreferredSize(new java.awt.Dimension(600, 400));

        javax.swing.JScrollPane itemScrollPanel = createItemMenuPanel(menuData);
        // subItemScrollPanel.setViewportView(subItemPanel);
        javax.swing.JPanel paymentPanel = createPaymentPanel();

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(contentPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentPanelLayout.createSequentialGroup()
                        .addComponent(itemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                        .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(subItemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 282,
                                        Short.MAX_VALUE)
                                .addComponent(paymentPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));
        contentPanelLayout
                .setVerticalGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(itemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                        .addGroup(contentPanelLayout.createSequentialGroup()
                                .addComponent(subItemScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0).addComponent(paymentPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(contentPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void calculatorPayment() {
        double totalPayment = 0.0;
        if (subItemPanel.getComponentCount() != 0) {
            java.awt.Component[] spParent = subItemPanel.getComponents();
            java.awt.Component[] spChildrenOut = new java.awt.Component[1];
            String price = "";
            int quantity = 0;
            for (java.awt.Component spPanel : spParent) {
                int flagPrice = 0, flagQuantity = 0;
                if (spPanel instanceof javax.swing.JPanel) {
                    java.awt.Component[] spChildren = ((javax.swing.JPanel) spPanel).getComponents();
                    for (java.awt.Component spChild : spChildren) {
                        if (spChild instanceof javax.swing.JLabel) {
                            String text = ((javax.swing.JLabel) spChild).getText();
                            if (text.contains("Price:")) {
                                String[] txtSplit = text.split(": ");
                                price = txtSplit[1];
                                flagPrice = 1;
                            }

                        }
                        if (spChild instanceof javax.swing.JSpinner) {
                            quantity = (int) ((javax.swing.JSpinner) spChild).getValue();
                            flagQuantity = 1;
                        }
                        if (flagPrice == 1 && flagQuantity == 1) {
                            double priceDouble = Double.parseDouble(price);
                            totalPayment += quantity * priceDouble;
                            java.awt.Component[] componentOfPayment = paymentPanel.getComponents();
                            // DecimalFormat df = new DecimalFormat("#.#");
                            for (java.awt.Component COP : componentOfPayment) {
                                if (COP instanceof javax.swing.JLabel) {
                                    ((javax.swing.JLabel) COP).setText("Total Payment: "
                                            + (String.format("%.3f", totalPayment)).replace(".", "") + " (VNĐ)");
                                }
                            }
                            break;
                        }
                    }
                }
            }

        } else {
            java.awt.Component[] componentOfPayment = paymentPanel.getComponents();
            // DecimalFormat df = new DecimalFormat("#.#");
            for (java.awt.Component COP : componentOfPayment) {
                if (COP instanceof javax.swing.JLabel) {
                    ((javax.swing.JLabel) COP).setText("Total Payment: " + " (VNĐ)");
                }
            }
        }
        paymentPanel.repaint();
    }

    private javax.swing.JPanel createPaymentPanel() {
        javax.swing.JLabel totalPaymentLabel = new javax.swing.JLabel();
        javax.swing.JButton payButton = new javax.swing.JButton();

        paymentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        totalPaymentLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        totalPaymentLabel.setForeground(new java.awt.Color(255, 102, 0));
        totalPaymentLabel.setText("Total Payment: ");

        payButton.setBackground(new java.awt.Color(0, 153, 153));
        payButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        payButton.setForeground(new java.awt.Color(255, 255, 255));
        payButton.setText("PAY");
        payButton.setBorder(null);
        payButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentPanelLayout = new javax.swing.GroupLayout(paymentPanel);
        paymentPanel.setLayout(paymentPanelLayout);
        paymentPanelLayout.setHorizontalGroup(paymentPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                        paymentPanelLayout.createSequentialGroup().addContainerGap(95, Short.MAX_VALUE)
                                .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(94, Short.MAX_VALUE))
                .addGroup(paymentPanelLayout.createSequentialGroup().addContainerGap().addComponent(totalPaymentLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        paymentPanelLayout.setVerticalGroup(paymentPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paymentPanelLayout.createSequentialGroup().addContainerGap().addComponent(totalPaymentLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap()));
        return paymentPanel;
    }

    private void createItemAddMenuPanel(PanyaCore.Menu data, int indexOfThisPanel) {
        subItemScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        subItemScrollPanel.setPreferredSize(new java.awt.Dimension(130, 400));

        subItemPanel.setLayout(new BoxLayout(subItemPanel, BoxLayout.Y_AXIS));
        subItemPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));

        java.awt.Component[] spParent = subItemPanel.getComponents();
        java.awt.Component[] spChildrenOut = new java.awt.Component[1];
        int check = 0;
        for (java.awt.Component spPanel : spParent) {
            if (spPanel instanceof javax.swing.JPanel) {
                java.awt.Component[] spChildren = ((javax.swing.JPanel) spPanel).getComponents();
                for (java.awt.Component spChild : spChildren) {
                    if (spChild instanceof javax.swing.JLabel) {
                        String text = ((javax.swing.JLabel) spChild).getText();
                        if (text.compareTo(data.getProducts().get(indexOfThisPanel).getName()) == 0) {
                            spChildrenOut = spChildren;
                            // System.out.println(text);
                            check = 1;
                            break;
                        }
                    }
                }
            }
        }
        if (check == 1) {
            for (java.awt.Component spChild : spChildrenOut) {
                if (spChild instanceof javax.swing.JSpinner) {
                    int value = (int) ((javax.swing.JSpinner) spChild).getValue();
                    ((javax.swing.JSpinner) spChild).setValue(++value);
                    return;
                }
            }
        }
        javax.swing.JPanel containItemAddMenuPanel = new javax.swing.JPanel();
        javax.swing.JLabel nameItemAddMenuLabel = new javax.swing.JLabel();
        javax.swing.JLabel priceItemAddMenuLabel = new javax.swing.JLabel();
        javax.swing.JButton deleteItemAddMenuButton = new javax.swing.JButton();
        javax.swing.JSpinner slItemAddMenuSpinner = new javax.swing.JSpinner();
        javax.swing.GroupLayout containItemAddMenuPanelLayout;
        containItemAddMenuPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        containItemAddMenuPanel.setPreferredSize(new java.awt.Dimension(207, 45));

        nameItemAddMenuLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        nameItemAddMenuLabel.setText(data.getProducts().get(indexOfThisPanel).getName());

        deleteItemAddMenuButton.setBackground(new java.awt.Color(255, 51, 0));
        deleteItemAddMenuButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        deleteItemAddMenuButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteItemAddMenuButton.setText("DEL");
        deleteItemAddMenuButton.setBorder(null);
        deleteItemAddMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemAddMenuButtonActionPerformed(evt);
            }
        });

        priceItemAddMenuLabel.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        priceItemAddMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        double priceOri = Double.parseDouble(data.getProducts().get(indexOfThisPanel).getPriceString());
        double pricePro = Double.parseDouble(data.getProducts().get(indexOfThisPanel).getSellOffString()) * priceOri;
        priceItemAddMenuLabel.setText("Price: " + (priceOri - pricePro));

        slItemAddMenuSpinner.setModel(
                new javax.swing.SpinnerNumberModel(countSL, 0, (int) listMaxQuantity.get(indexOfThisPanel), 1));
        slItemAddMenuSpinner.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                JSpinner pinner = slItemAddMenuSpinner;
                int value = (int) pinner.getValue();
                java.awt.Component[] spChildren = pinner.getParent().getComponents();
                // now iterate over all JTextFields...
                String name = "";
                for (java.awt.Component spChild : spChildren) {
                    if (spChild instanceof javax.swing.JLabel) {
                        String text = ((javax.swing.JLabel) spChild).getText();
                        if (text.contains("Price") == false) {
                            name = text;
                        }
                    }
                }

                java.awt.Component[] spFather = itemPanel.getComponents();
                java.awt.Component spMother = new javax.swing.JPanel();
                int check = 0;
                int indexOfThisPanel = 0;
                for (java.awt.Component spFa : spFather) {
                    if (spFa instanceof javax.swing.JPanel) {
                        java.awt.Component[] childrens = ((javax.swing.JPanel) spFa).getComponents();
                        for (java.awt.Component child : childrens) {
                            if (child instanceof javax.swing.JLabel) {
                                String nameCake = ((javax.swing.JLabel) child).getText();
                                if (nameCake.compareTo(name) == 0) {
                                    spMother = spFa;
                                    var xOfThisPanel = (int) ((spFa.getX()));
                                    var yOfThisPanel = (int) ((spFa.getY())); // 53 la khoang cach giua cac component
                                    // System.out.println(xOfThisPanel + " " + yOfThisPanel); //y cach nhau 255, x
                                    // cot1:5 cot2:362
                                    var getColumn = (xOfThisPanel == 5 ? 1 : 2);
                                    if (getColumn == 1) {
                                        indexOfThisPanel = 2 * (int) ((yOfThisPanel - 5) / 255);
                                    }
                                    if (getColumn == 2) {
                                        indexOfThisPanel = 2 * (int) ((yOfThisPanel - 5) / 255) + 1;
                                    }
                                    check = 1;
                                    // System.out.println("SL: " + value + " Name: " + nameCake);

                                    break;
                                }
                            }
                        }
                    }
                    if (check == 1) {
                        break;
                    }
                }
                if (check == 1) {
                    java.awt.Component[] childrens = ((javax.swing.JPanel) spMother).getComponents();
                    for (java.awt.Component child : childrens) {
                        if (child instanceof javax.swing.JLabel) {
                            String txt = ((javax.swing.JLabel) child).getText();
                            if (txt.contains("SL")) {
                                ((javax.swing.JLabel) child)
                                        .setText("SL: " + ((int) listMaxQuantity.get(indexOfThisPanel) - value));
                                calculatorPayment();
                                return;
                            }
                        }
                    }
                }

            }
        });
        // .addActionListener(new java.awt.event.ActionListener() {
        // public void mousactionPerformedeClicked(java.awt.event.ActionEvent evt) {
        // slItemAddMenuSpinnerMouseClicked(evt);
        // }
        // });

        containItemAddMenuPanelLayout = new javax.swing.GroupLayout(containItemAddMenuPanel);
        containItemAddMenuPanel.setLayout(containItemAddMenuPanelLayout);
        containItemAddMenuPanelLayout.setHorizontalGroup(
                containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(containItemAddMenuPanelLayout.createSequentialGroup()
                                .addGroup(containItemAddMenuPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(slItemAddMenuSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 110,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nameItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(containItemAddMenuPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(containItemAddMenuPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE).addComponent(deleteItemAddMenuButton,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(priceItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))));
        containItemAddMenuPanelLayout.setVerticalGroup(
                containItemAddMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(containItemAddMenuPanelLayout.createSequentialGroup()
                                .addGroup(containItemAddMenuPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(nameItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deleteItemAddMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(containItemAddMenuPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(priceItemAddMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(slItemAddMenuSpinner))));

        subItemPanel.add(containItemAddMenuPanel);
        subItemPanel.add(Box.createVerticalStrut(5));
        subItemScrollPanel.setViewportView(subItemPanel);
    }

    public javax.swing.JPanel createPanel(int i) {
        itemScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        itemScrollPanel.setPreferredSize(new java.awt.Dimension(130, 400));

        javax.swing.JPanel containItemPanel = new javax.swing.JPanel();
        javax.swing.JLabel nameItemLabel = new javax.swing.JLabel();
        javax.swing.JLabel imgItemLabel = new javax.swing.JLabel();
        javax.swing.JLabel priceItemLabel = new javax.swing.JLabel();
        javax.swing.JButton addItemButton = new javax.swing.JButton();
        javax.swing.JLabel slItemLabel = new javax.swing.JLabel();
        javax.swing.JLabel saleLabel = new javax.swing.JLabel();
        javax.swing.GroupLayout itemPanelLayout;

        containItemPanel.setBackground(new java.awt.Color(255, 255, 255));
        containItemPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        containItemPanel.setPreferredSize(new java.awt.Dimension(210, 250));

        nameItemLabel.setBackground(new java.awt.Color(255, 255, 255));
        nameItemLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nameItemLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nameItemLabel.setText(menuData.get(0).getProducts().get(i).getName());
        nameItemLabel.setOpaque(true);

        imgItemLabel.setBackground(new java.awt.Color(204, 204, 204));
        imgItemLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgItemLabel.setIcon(new javax.swing.ImageIcon(menuData.get(0).getProducts().get(i).getImage())); // NOI18N
        imgItemLabel.setOpaque(true);

        priceItemLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        priceItemLabel.setForeground(new java.awt.Color(0, 153, 153));
        priceItemLabel.setText("Price: " + menuData.get(0).getProducts().get(i).getPriceString());

        addItemButton.setBackground(new java.awt.Color(255, 204, 51));
        addItemButton.setText("ADD");
        addItemButton.setBorder(null);
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item1AddButtonActionPerformed(evt);
            }
        });

        slItemLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        slItemLabel.setText("SL: " + menuData.get(0).getProducts().get(i).getQuantity());

        saleLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        saleLabel.setForeground(new java.awt.Color(255, 0, 51));
        saleLabel.setText("Sale: " + menuData.get(0).getProducts().get(i).getSellOffString());

        itemPanelLayout = new javax.swing.GroupLayout(containItemPanel);
        containItemPanel.setLayout(itemPanelLayout);
        itemPanelLayout.setHorizontalGroup(itemPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(itemPanelLayout.createSequentialGroup().addContainerGap()
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(itemPanelLayout.createSequentialGroup()
                                        .addComponent(priceItemLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(0, 0, 0).addComponent(addItemButton,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 55,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(itemPanelLayout.createSequentialGroup()
                                        .addComponent(nameItemLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) // cho nay
                                                                                                             // fix size
                                                                                                             // 30 =
                                                                                                             // 186,
                                                                                                             // 236,
                                        .addComponent(saleLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(slItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(imgItemLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap()));
        itemPanelLayout.setVerticalGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(itemPanelLayout.createSequentialGroup()
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nameItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(saleLabel).addComponent(slItemLabel))
                        .addGap(0, 0, 0) //// .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 174,
                                         //// Short.MAX_VALUE)
                        .addComponent(imgItemLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(priceItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))));
        return containItemPanel;
    }

    private javax.swing.JScrollPane createItemMenuPanel(List<PanyaCore.Menu> menuData) {
        java.awt.GridLayout layout = new java.awt.GridLayout(0, 2);
        layout.setHgap(5);
        layout.setVgap(5);
        itemPanel.setLayout(layout);
        for (int i = 0; i < menuData.get(0).getProducts().size(); i++) {
            itemPanel.add(createPanel(i));
        }
        itemPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));

        itemScrollPanel.setViewportView(itemPanel);
        return itemScrollPanel;
    }

    private void deleteButonActionPerformed(java.awt.event.ActionEvent evt) {
        supportDelete();
    }
    public void supportDelete(){
        java.awt.Container c;
        javax.swing.JLabel title;
        javax.swing.JLabel ID;
        javax.swing.JLabel name;
        javax.swing.JLabel price;
        javax.swing.JLabel quantity;

        javax.swing.JLabel SaleOff;
        javax.swing.JSpinner tSaleOff;

        javax.swing.JLabel image;
        javax.swing.JTextField timage;
        javax.swing.JButton cimage;

        javax.swing.JButton sub;
        javax.swing.JButton reset;
        javax.swing.JButton check;
        javax.swing.JLabel res;
        javax.swing.JTextArea resadd;
        JFrame addFrame = new JFrame();
        addFrame.setTitle("Registration Form");
        addFrame.setBounds(300, 90, 900, 600);
        addFrame.setResizable(false);

        c = addFrame.getContentPane();
        c.setLayout(null);

        title = new javax.swing.JLabel("DELETE FORM");
        title.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 30));
        title.setSize(300, 30);
        title.setLocation(300, 30);
        c.add(title);

        ID = new javax.swing.JLabel("ID");
        ID.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        ID.setSize(100, 30);
        ID.setLocation(100, 100);
        c.add(ID);

        tID = new javax.swing.JTextField();
        tID.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tID.setSize(200, 30);
        tID.setLocation(200, 100);
        c.add(tID);

        name = new javax.swing.JLabel("Name");
        name.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        name.setSize(100, 30);
        name.setLocation(100, 150);
        c.add(name);

        tname = new javax.swing.JTextField();
        tname.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tname.setSize(200, 30);
        tname.setLocation(200, 150);
        c.add(tname);

        price = new javax.swing.JLabel("Price");
        price.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        price.setSize(100, 30);
        price.setLocation(100, 200);
        c.add(price);

        tprice = new javax.swing.JTextField();
        tprice.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tprice.setSize(200, 30);
        tprice.setLocation(200, 200);
        c.add(tprice);

        quantity = new javax.swing.JLabel("Quantity");
        quantity.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        quantity.setSize(100, 30);
        quantity.setLocation(100, 250);
        c.add(quantity);

        tquantity = new javax.swing.JSpinner();
        tquantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        tquantity.setSize(100, 30);
        tquantity.setLocation(200, 250);
        c.add(tquantity);

        SaleOff = new javax.swing.JLabel("Sale Off");
        SaleOff.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        SaleOff.setSize(100, 30);
        SaleOff.setLocation(100, 300);
        c.add(SaleOff);

        tSaleOff = new javax.swing.JSpinner();
        tSaleOff.setModel(new javax.swing.SpinnerNumberModel(0.0, 0.0, 1.0, 0.1));
        tSaleOff.setSize(100, 30);
        tSaleOff.setLocation(200, 300);
        c.add(tSaleOff);

        image = new javax.swing.JLabel("Image");
        image.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        image.setSize(100, 30);
        image.setLocation(100, 350);
        c.add(image);

        timage = new javax.swing.JTextField();
        timage.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        timage.setSize(200, 30);
        timage.setLocation(200, 350);
        c.add(timage);

        showImg = new javax.swing.JLabel();
        showImg.setBackground(new java.awt.Color(150, 150, 200));
        showImg.setSize(300, 176);
        showImg.setLocation(500, 300);
        // showImg.setIcon(new
        // javax.swing.ImageIcon("Panya\\src\\main\\resources\\images\\Donut.jpg"));
        c.add(showImg);

        cimage = new javax.swing.JButton("...");
        cimage.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        cimage.setSize(50, 30);
        cimage.setLocation(405, 350);
        cimage.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javax.swing.JFileChooser jChooser = new javax.swing.JFileChooser(
                        new File("Panya\\src\\main\\resources\\images\\"));
                int r = jChooser.showSaveDialog(null);
                if (r == javax.swing.JFileChooser.APPROVE_OPTION) {
                    timage.setText(jChooser.getSelectedFile().getAbsolutePath());
                    try {
                        showImg.setIcon(new javax.swing.ImageIcon(jChooser.getSelectedFile().getAbsolutePath()));
                    } catch (Exception e) {
                        showImg.setText("Cannot upload image");
                    }
                }
                // if the user cancelled the operation
                else
                    timage.setText("the user cancelled the operation");
            }
        });
        c.add(cimage);

        check = new javax.swing.JButton("Search");
        check.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        check.setSize(100, 30);
        check.setLocation(390, 450);
        check.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // showImg.setText("");
                // showImg.setIcon(null);
                // String sNotify = "";
                // boolean flag = true;
                // tout.setText("");
                // System.out.println("test");
                if (tID.getText().isEmpty() && tname.getText().isEmpty()) {
                    tout.setText("ID or Name is not empty...");
                } else {
                    for (int i = 0; i < menuData.get(0).getProducts().size(); i++) {
                        String sID = menuData.get(0).getProducts().get(i).getId();
                        String sName = menuData.get(0).getProducts().get(i).getName();
                        String sPrice = menuData.get(0).getProducts().get(i).getPriceString();
                        int sQuantity = menuData.get(0).getProducts().get(i).getQuantity();
                        String sSellOff = menuData.get(0).getProducts().get(i).getSellOffString();
                        String sImage = menuData.get(0).getProducts().get(i).getImage();
                        if (sID.compareTo(tID.getText()) == 0 || sName.compareTo(tname.getText()) == 0) {
                            tID.setText(sID);
                            tname.setText(sName);
                            tprice.setText(sPrice);
                            tquantity.setValue(sQuantity);
                            tSaleOff.setValue(Float.parseFloat(sSellOff));
                            timage.setText(sImage);
                            String s1 = "ID: " + sID + "\n" + "Name: " + sName + "\n" + "Price: " + sPrice + "\n"
                                    + "Quantity: " + sQuantity + "\n" + "Sale Off: " + sSellOff + "\n";
                            tout.setText(s1);
                            showImg.setIcon(new javax.swing.ImageIcon(timage.getText()));
                            break;
                        }
                    }
                }
            }
        });
        c.add(check);

        sub = new javax.swing.JButton("Delete");
        sub.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        sub.setSize(100, 30);
        sub.setLocation(150, 450);

        sub.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // String sNotify = "";
                // showImg.setText("");
                // showImg.setIcon(null);
                // tout.setText("");
                System.out.println("test");
                if (tID.getText().isEmpty() && tname.getText().isEmpty()) {
                    tout.setText("ID or Name is not empty...");
                    return;
                } else {
                    for (int i = 0; i < menuData.get(0).getProducts().size(); i++) {
                        String sID = tID.getText();
                        String sName = tname.getText();
                        String sPrice = tprice.getText();
                        int sQuantity = (int)tquantity.getValue();
                        String sSellOff = ""+tSaleOff.getValue();
                        String sImage = timage.getText();
                        if (sID.compareTo(menuData.get(0).getProducts().get(i).getId()) == 0 || sName.compareTo(menuData.get(0).getProducts().get(i).getName()) == 0) {
                            String s1 = "ID: " + tID.getText() + "\n" + "Name: " + tname.getText() + "\n" + "Price: "
                                    + tprice.getText() + "\n" + "Quantity: " + tquantity.getValue() + "\n"
                                    + "Sale Off: " + tSaleOff.getValue() + "\n" + "\n" + "Delete successful";
                            tout.setText(s1);
                            showImg.setIcon(new javax.swing.ImageIcon(timage.getText()));



                            java.awt.Component[] spParent = itemPanel.getComponents();
                            for (java.awt.Component spPanel : spParent) {
                                if (spPanel instanceof javax.swing.JPanel) {
                                    java.awt.Component[] childrens = ((javax.swing.JPanel) spPanel).getComponents();
                                    for (java.awt.Component spChild : childrens) {
                                        if (spChild instanceof javax.swing.JLabel) {
                                            String text = ((javax.swing.JLabel) spChild).getText();
                                            if (text.compareTo(sName) == 0) {
                                                itemPanel.remove(i);
                                                itemScrollPanel.setViewportView(itemPanel);
                                                menuData.get(0).getProducts().remove(i);
                                                PanyaCore.Menu.saveCustomProductList("Panya/src/main/resources/data/ManageData/MenuFile.json",menuData);
                                                products.remove(i);
                                                PanyaCore.Product.saveProductList("Panya/src/main/resources/data/ManageData/ProductFile.json",products);
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            return;
                        }
                    }
                    
                }
            }
        });
        c.add(sub);

        tout = new javax.swing.JTextArea();
        tout.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tout.setSize(300, 180);
        tout.setLocation(500, 100);
        tout.setLineWrap(true);
        tout.setEditable(false);
        c.add(tout);

        res = new javax.swing.JLabel("");
        res.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        res.setSize(500, 25);
        res.setLocation(100, 500);
        c.add(res);

        resadd = new javax.swing.JTextArea();
        resadd.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        resadd.setSize(200, 75);
        resadd.setLocation(580, 175);
        resadd.setLineWrap(true);
        c.add(resadd);

        addFrame.setVisible(true);
    }
    private void saleOffButonActionPerformed(java.awt.event.ActionEvent evt)
    {
        JFrame frame = new JFrame("SALE OFF");
        javax.swing.JPanel panel = new javax.swing.JPanel();
        java.awt.LayoutManager layout = new java.awt.FlowLayout();  
        panel.setLayout(layout);       
        javax.swing.JButton button = new javax.swing.JButton("Click Me!");
        final javax.swing.JLabel label = new javax.swing.JLabel();
        button.addActionListener(new java.awt.event.ActionListener() {
           @Override
           public void actionPerformed(java.awt.event.ActionEvent e) { 
              String result = (String)JOptionPane.showInputDialog(
                 frame,
                 "Enter Value Of Sale", 
                 "Input Sale",            
                 JOptionPane.PLAIN_MESSAGE,
                 null,            
                 null, 
                 ""
              );
              if(result != null && result.length() > 0){
                 label.setText("You input: " + result);
                 //System.out.println(label.getText());
                 nSale = Double.parseDouble(result);
                //  nSale = Double.parseDouble(label.getText());
                frame.setVisible(false);


                java.awt.Component[] spParent = itemPanel.getComponents();
                int i = 0;
                for (java.awt.Component spPanel : spParent) {
                    if (spPanel instanceof javax.swing.JPanel) {
                        java.awt.Component[] childrens = ((javax.swing.JPanel) spPanel).getComponents();
                        double nPrice = menuData.get(0).getProducts().get(i).getPrice().doubleValue();
                        menuData.get(0).getProducts().get(i).setPrice(new BigDecimal(""+(nPrice - nPrice*nSale)));
                        //System.out.println(nPrice - nPrice*nSale);
                        for (java.awt.Component spChild : childrens) {
                            if (spChild instanceof javax.swing.JLabel) {
                                String text = ((javax.swing.JLabel) spChild).getText();
                                if (text.contains("Price:") == true) {
                                    String[] txt = text.split(": ");
                                    ((javax.swing.JLabel) spChild).setText("Price: " + (Double.parseDouble(txt[1]) - (Double.parseDouble(txt[1]) * nSale)));
        
                                }
                            }
                        }
                        i++;
                    }
                }

                return;
              }else {
                 label.setText("None input");
              }
           }
        });
        panel.add(button);
        panel.add(label);
        frame.getContentPane().add(panel, java.awt.BorderLayout.CENTER);    
        frame.setSize(560, 200);      
        frame.setLocationRelativeTo(null);  
        frame.setVisible(true);
        //Double nSale = menuData.get(0).getSellOff().doubleValue();

    }
    private void updataButonActionPerformed(java.awt.event.ActionEvent evt) {
        supportUpdata();
    }

    public void supportUpdata() {
        java.awt.Container c;
        javax.swing.JLabel title;
        javax.swing.JLabel ID;
        javax.swing.JLabel name;
        javax.swing.JLabel price;
        javax.swing.JLabel quantity;

        javax.swing.JLabel SaleOff;
        javax.swing.JSpinner tSaleOff;

        javax.swing.JLabel image;
        javax.swing.JTextField timage;
        javax.swing.JButton cimage;

        javax.swing.JButton sub;
        javax.swing.JButton reset;
        javax.swing.JButton check;
        javax.swing.JLabel res;
        javax.swing.JTextArea resadd;
        JFrame addFrame = new JFrame();
        addFrame.setTitle("Registration Form");
        addFrame.setBounds(300, 90, 900, 600);
        addFrame.setResizable(false);

        c = addFrame.getContentPane();
        c.setLayout(null);

        title = new javax.swing.JLabel("UPDATE FORM");
        title.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 30));
        title.setSize(300, 30);
        title.setLocation(300, 30);
        c.add(title);

        ID = new javax.swing.JLabel("ID");
        ID.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        ID.setSize(100, 30);
        ID.setLocation(100, 100);
        c.add(ID);

        tID = new javax.swing.JTextField();
        tID.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tID.setSize(200, 30);
        tID.setLocation(200, 100);
        c.add(tID);

        name = new javax.swing.JLabel("Name");
        name.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        name.setSize(100, 30);
        name.setLocation(100, 150);
        c.add(name);

        tname = new javax.swing.JTextField();
        tname.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tname.setSize(200, 30);
        tname.setLocation(200, 150);
        c.add(tname);

        price = new javax.swing.JLabel("Price");
        price.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        price.setSize(100, 30);
        price.setLocation(100, 200);
        c.add(price);

        tprice = new javax.swing.JTextField();
        tprice.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tprice.setSize(200, 30);
        tprice.setLocation(200, 200);
        c.add(tprice);

        quantity = new javax.swing.JLabel("Quantity");
        quantity.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        quantity.setSize(100, 30);
        quantity.setLocation(100, 250);
        c.add(quantity);

        tquantity = new javax.swing.JSpinner();
        tquantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        tquantity.setSize(100, 30);
        tquantity.setLocation(200, 250);
        c.add(tquantity);

        SaleOff = new javax.swing.JLabel("Sale Off");
        SaleOff.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        SaleOff.setSize(100, 30);
        SaleOff.setLocation(100, 300);
        c.add(SaleOff);

        tSaleOff = new javax.swing.JSpinner();
        tSaleOff.setModel(new javax.swing.SpinnerNumberModel(0.0, 0.0, 1.0, 0.1));
        tSaleOff.setSize(100, 30);
        tSaleOff.setLocation(200, 300);
        c.add(tSaleOff);

        image = new javax.swing.JLabel("Image");
        image.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        image.setSize(100, 30);
        image.setLocation(100, 350);
        c.add(image);

        timage = new javax.swing.JTextField();
        timage.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        timage.setSize(200, 30);
        timage.setLocation(200, 350);
        c.add(timage);

        showImg = new javax.swing.JLabel();
        showImg.setBackground(new java.awt.Color(150, 150, 200));
        showImg.setSize(300, 176);
        showImg.setLocation(500, 300);
        // showImg.setIcon(new
        // javax.swing.ImageIcon("Panya\\src\\main\\resources\\images\\Donut.jpg"));
        c.add(showImg);

        cimage = new javax.swing.JButton("...");
        cimage.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        cimage.setSize(50, 30);
        cimage.setLocation(405, 350);
        cimage.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javax.swing.JFileChooser jChooser = new javax.swing.JFileChooser(
                        new File("Panya\\src\\main\\resources\\images\\"));
                int r = jChooser.showSaveDialog(null);
                if (r == javax.swing.JFileChooser.APPROVE_OPTION) {
                    timage.setText(jChooser.getSelectedFile().getAbsolutePath());
                    try {
                        showImg.setIcon(new javax.swing.ImageIcon(jChooser.getSelectedFile().getAbsolutePath()));
                    } catch (Exception e) {
                        showImg.setText("Cannot upload image");
                    }
                }
                // if the user cancelled the operation
                else
                    timage.setText("the user cancelled the operation");
            }
        });
        c.add(cimage);

        check = new javax.swing.JButton("Search");
        check.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        check.setSize(100, 30);
        check.setLocation(390, 450);
        check.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // showImg.setText("");
                // showImg.setIcon(null);
                // String sNotify = "";
                // boolean flag = true;
                // tout.setText("");
                // System.out.println("test");
                if (tID.getText().isEmpty() && tname.getText().isEmpty()) {
                    tout.setText("ID or Name is not empty...");
                } else {
                    for (int i = 0; i < menuData.get(0).getProducts().size(); i++) {
                        String sID = menuData.get(0).getProducts().get(i).getId();
                        String sName = menuData.get(0).getProducts().get(i).getName();
                        String sPrice = menuData.get(0).getProducts().get(i).getPriceString();
                        int sQuantity = menuData.get(0).getProducts().get(i).getQuantity();
                        String sSellOff = menuData.get(0).getProducts().get(i).getSellOffString();
                        String sImage = menuData.get(0).getProducts().get(i).getImage();
                        if (sID.compareTo(tID.getText()) == 0 || sName.compareTo(tname.getText()) == 0) {
                            tID.setText(sID);
                            tname.setText(sName);
                            tprice.setText(sPrice);
                            tquantity.setValue(sQuantity);
                            tSaleOff.setValue(Float.parseFloat(sSellOff));
                            timage.setText(sImage);
                            String s1 = "ID: " + sID + "\n" + "Name: " + sName + "\n" + "Price: " + sPrice + "\n"
                                    + "Quantity: " + sQuantity + "\n" + "Sale Off: " + sSellOff + "\n";
                            tout.setText(s1);
                            showImg.setIcon(new javax.swing.ImageIcon(timage.getText()));
                            break;
                        }
                    }
                }
            }
        });
        c.add(check);

        sub = new javax.swing.JButton("Add");
        sub.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        sub.setSize(100, 30);
        sub.setLocation(150, 450);

        sub.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // String sNotify = "";
                // showImg.setText("");
                // showImg.setIcon(null);
                // tout.setText("");
                System.out.println("test");
                if (tID.getText().isEmpty() && tname.getText().isEmpty()) {
                    tout.setText("ID or Name is not empty...");
                    return;
                } else {
                    for (int i = 0; i < menuData.get(0).getProducts().size(); i++) {
                        String sID = tID.getText();
                        String sName = tname.getText();
                        String sPrice = tprice.getText();
                        int sQuantity = (int)tquantity.getValue();
                        String sSellOff = ""+tSaleOff.getValue();
                        String sImage = timage.getText();
                        if (sID.compareTo(menuData.get(0).getProducts().get(i).getId()) == 0 || sName.compareTo(menuData.get(0).getProducts().get(i).getName()) == 0) {
                            String s1 = "ID: " + tID.getText() + "\n" + "Name: " + tname.getText() + "\n" + "Price: "
                                    + tprice.getText() + "\n" + "Quantity: " + tquantity.getValue() + "\n"
                                    + "Sale Off: " + tSaleOff.getValue() + "\n" + "\n" + "Update successful";
                            tout.setText(s1);
                            showImg.setIcon(new javax.swing.ImageIcon(timage.getText()));



                            java.awt.Component[] spParent = itemPanel.getComponents();
                            for (java.awt.Component spPanel : spParent) {
                                if (spPanel instanceof javax.swing.JPanel) {
                                    java.awt.Component[] childrens = ((javax.swing.JPanel) spPanel).getComponents();
                                    for (java.awt.Component spChild : childrens) {
                                        if (spChild instanceof javax.swing.JLabel) {
                                            String text = ((javax.swing.JLabel) spChild).getText();
                                            if (text.compareTo(sName) == 0) {
                                                int x = 0;
                                                for (java.awt.Component spChildj : childrens) {
                                                    if (spChildj instanceof javax.swing.JLabel) {
                                                        if(x == 0)
                                                        {
                                                            ((javax.swing.JLabel) spChildj).setText("Price: " + sPrice);
                                                        }
                                                        if(x == 1)
                                                        {
                                                            ((javax.swing.JLabel) spChildj).setText(sName);
                                                        }   
                                                        if(x == 2)
                                                        {
                                                            ((javax.swing.JLabel) spChildj).setText("Sale: " + sSellOff);
                                                        }
                                                        if(x == 3)
                                                        {
                                                            ((javax.swing.JLabel) spChildj).setText("SL: " + sQuantity);
                                                        }
                                                        if(x == 4)
                                                        {
                                                            ((javax.swing.JLabel) spChildj).setIcon(new javax.swing.ImageIcon(sImage));

                                                        }                                              
                                                        x++;
                                                    }   
                                                }
                                                menuData.get(0).getProducts().get(i).setId(sID);
                                                menuData.get(0).getProducts().get(i).setName(sName);
                                                menuData.get(0).getProducts().get(i).setPrice(new BigDecimal("" + sPrice));
                                                menuData.get(0).getProducts().get(i).setQuantity(sQuantity);
                                                menuData.get(0).getProducts().get(i).setSellOff(new BigDecimal(sSellOff));
                                                menuData.get(0).getProducts().get(i).setImage(sImage);

                                                PanyaCore.Menu.saveCustomProductList("Panya/src/main/resources/data/ManageData/MenuFile.json",menuData);
                                                BigDecimal bigPrice = new BigDecimal(sPrice);
                                                int Iquantity = (int) sQuantity;
                                                BigDecimal IsaleOff = new BigDecimal((sSellOff + ""));
                                                products.get(i).setId(sID);
                                                products.get(i).setName(sName);
                                                products.get(i).setPrice(bigPrice);
                                                products.get(i).setNote("");
                                                products.get(i).setQuantity(Iquantity);
                                                products.get(i).setSellOff(IsaleOff);
                                                products.get(i).setImage(sImage);
                                                PanyaCore.Product.saveProductList("Panya/src/main/resources/data/ManageData/ProductFile.json",products);
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            return;
                        }
                    }
                    
                }
            }
        });
        c.add(sub);

        tout = new javax.swing.JTextArea();
        tout.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tout.setSize(300, 180);
        tout.setLocation(500, 100);
        tout.setLineWrap(true);
        tout.setEditable(false);
        c.add(tout);

        res = new javax.swing.JLabel("");
        res.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        res.setSize(500, 25);
        res.setLocation(100, 500);
        c.add(res);

        resadd = new javax.swing.JTextArea();
        resadd.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        resadd.setSize(200, 75);
        resadd.setLocation(580, 175);
        resadd.setLineWrap(true);
        c.add(resadd);

        addFrame.setVisible(true);
    }

    private void searchButonActionPerformed(java.awt.event.ActionEvent evt) {
        if(searchTextField.getText().isEmpty())
        {
            for(int i = 0; i < menuData.get(0).getProducts().size(); i++)
            {
                itemPanel.add(createPanel(i));
                itemScrollPanel.setViewportView(itemPanel);
            }
            JOptionPane.showMessageDialog(null, "Enter information to Search Bar" , "Notification " , JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            String iSearch = searchTextField.getText();
            java.awt.Component[] spParent = itemPanel.getComponents();
            List<Integer> lFlag = new ArrayList<Integer>();
            int j = 0;
            for (java.awt.Component spPanel : spParent) {
                int i = 0;
                if (spPanel instanceof javax.swing.JPanel) {
                    java.awt.Component[] childrens = ((javax.swing.JPanel) spPanel).getComponents();
                    for (java.awt.Component spChild : childrens) {
                        if (spChild instanceof javax.swing.JLabel) {
                            String text = ((javax.swing.JLabel) spChild).getText();
                            // if (text.contains(iSearch) == 0) {
                            //     itemPanel.remove(i);
                            //     itemScrollPanel.setViewportView(itemPanel);
                            //     menuData.get(0).getProducts().remove(i);
                            //     PanyaCore.Menu.saveCustomProductList("Panya/src/main/resources/data/ManageData/MenuFile.json",menuData);
                            //     products.remove(i);
                            //     PanyaCore.Product.saveProductList("Panya/src/main/resources/data/ManageData/ProductFile.json",products);
                            //     break;
                            // }
                            if(i == 1)
                            {
                                if(text.contains(iSearch) == true)
                                {

                                }
                                else{
                                    lFlag.add(j);
                                }
                            }
                            i++;
                        }
                    }
                }
                j++;
            }
            int a = 0;
            for(int i = 0; i < lFlag.size(); i++)
            {
                int index = lFlag.get(i);
                itemPanel.remove(index - a);
                a++;

            }
            itemScrollPanel.setViewportView(itemPanel);
        }
    }

    private void addButonActionPerformed(java.awt.event.ActionEvent evt) {
        createAddForm();
    }

    private void deleteItemAddMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteItemAddMenuButtonActionPerformed
        // TODO add your handling code here:
        JButton button = (JButton) evt.getSource();
        var indexOfThisPanel = (int) ((button.getParent().getY() - 5) / 53); // 53 la khoang cach giua cac component
        // System.out.println(indexOfThisPanel);

        java.awt.Component[] spChildren = button.getParent().getComponents();
        int quantity = 0;
        String name = "";
        for (java.awt.Component spChild : spChildren) {
            if (spChild instanceof javax.swing.JSpinner) {
                quantity = (int) ((javax.swing.JSpinner) spChild).getValue();
            }
            if (spChild instanceof javax.swing.JLabel) {
                String getLabel = ((javax.swing.JLabel) spChild).getText();
                if (getLabel.contains("Price") == false) {
                    name = getLabel;
                }
            }
        }

        java.awt.Component[] spParent = itemPanel.getComponents();
        java.awt.Component[] spChildrenOut = new java.awt.Component[1];
        int check = 0;
        for (java.awt.Component spPanel : spParent) {
            if (spPanel instanceof javax.swing.JPanel) {
                java.awt.Component[] childrens = ((javax.swing.JPanel) spPanel).getComponents();
                for (java.awt.Component spChild : childrens) {
                    if (spChild instanceof javax.swing.JLabel) {
                        String text = ((javax.swing.JLabel) spChild).getText();
                        if (text.compareTo(name) == 0) {
                            spChildrenOut = childrens;
                            // System.out.println(text);
                            check = 1;
                            break;
                        }
                    }
                }
            }
        }
        if (check == 1) {
            for (java.awt.Component spChild : spChildrenOut) {
                if (spChild instanceof javax.swing.JLabel) {
                    String getLabel = ((javax.swing.JLabel) spChild).getText();
                    if (getLabel.contains("SL:") == true) {
                        String[] tempQuantity = getLabel.split(": ");
                        int value = Integer.parseInt(tempQuantity[1]);
                        ((javax.swing.JLabel) spChild).setText("SL: " + (value + quantity));
                    }
                }
            }
        }

        if (subItemPanel.getComponentCount() == 1) {
            subItemPanel.remove(indexOfThisPanel);
            subItemPanel.remove(indexOfThisPanel);

        } else {
            subItemPanel.remove(indexOfThisPanel * 2);
            subItemPanel.remove(indexOfThisPanel * 2);
        }
        subItemScrollPanel.setViewportView(subItemPanel);
        calculatorPayment();
    }

    public Boolean checkImage(String fileName) {
        return true;
    }

    public void createAddForm() {
        java.awt.Container c;
        javax.swing.JLabel title;
        javax.swing.JLabel ID;
        javax.swing.JLabel name;
        javax.swing.JLabel price;
        javax.swing.JLabel quantity;

        javax.swing.JLabel SaleOff;
        javax.swing.JSpinner tSaleOff;

        javax.swing.JLabel image;
        javax.swing.JTextField timage;
        javax.swing.JButton cimage;

        javax.swing.JButton sub;
        javax.swing.JButton reset;
        javax.swing.JButton check;
        javax.swing.JLabel res;
        javax.swing.JTextArea resadd;
        JFrame addFrame = new JFrame();
        addFrame.setTitle("Registration Form");
        addFrame.setBounds(300, 90, 900, 600);
        addFrame.setResizable(false);

        c = addFrame.getContentPane();
        c.setLayout(null);

        title = new javax.swing.JLabel("ADD FORM");
        title.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 30));
        title.setSize(300, 30);
        title.setLocation(300, 30);
        c.add(title);

        ID = new javax.swing.JLabel("ID");
        ID.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        ID.setSize(100, 30);
        ID.setLocation(100, 100);
        c.add(ID);

        tID = new javax.swing.JTextField();
        tID.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tID.setSize(200, 30);
        tID.setLocation(200, 100);
        c.add(tID);

        name = new javax.swing.JLabel("Name");
        name.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        name.setSize(100, 30);
        name.setLocation(100, 150);
        c.add(name);

        tname = new javax.swing.JTextField();
        tname.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tname.setSize(200, 30);
        tname.setLocation(200, 150);
        c.add(tname);

        price = new javax.swing.JLabel("Price");
        price.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        price.setSize(100, 30);
        price.setLocation(100, 200);
        c.add(price);

        tprice = new javax.swing.JTextField();
        tprice.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tprice.setSize(200, 30);
        tprice.setLocation(200, 200);
        c.add(tprice);

        quantity = new javax.swing.JLabel("Quantity");
        quantity.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        quantity.setSize(100, 30);
        quantity.setLocation(100, 250);
        c.add(quantity);

        tquantity = new javax.swing.JSpinner();
        tquantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        tquantity.setSize(100, 30);
        tquantity.setLocation(200, 250);
        c.add(tquantity);

        SaleOff = new javax.swing.JLabel("Sale Off");
        SaleOff.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        SaleOff.setSize(100, 30);
        SaleOff.setLocation(100, 300);
        c.add(SaleOff);

        tSaleOff = new javax.swing.JSpinner();
        tSaleOff.setModel(new javax.swing.SpinnerNumberModel(0.0, 0.0, 1.0, 0.1));
        tSaleOff.setSize(100, 30);
        tSaleOff.setLocation(200, 300);
        c.add(tSaleOff);

        image = new javax.swing.JLabel("Image");
        image.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        image.setSize(100, 30);
        image.setLocation(100, 350);
        c.add(image);

        timage = new javax.swing.JTextField();
        timage.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        timage.setSize(200, 30);
        timage.setLocation(200, 350);
        c.add(timage);

        showImg = new javax.swing.JLabel();
        showImg.setBackground(new java.awt.Color(150, 150, 200));
        showImg.setSize(300, 176);
        showImg.setLocation(500, 300);
        // showImg.setIcon(new
        // javax.swing.ImageIcon("Panya\\src\\main\\resources\\images\\Donut.jpg"));
        c.add(showImg);

        cimage = new javax.swing.JButton("...");
        cimage.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        cimage.setSize(50, 30);
        cimage.setLocation(405, 350);
        cimage.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javax.swing.JFileChooser jChooser = new javax.swing.JFileChooser(
                        new File("Panya\\src\\main\\resources\\images\\"));
                int r = jChooser.showSaveDialog(null);
                if (r == javax.swing.JFileChooser.APPROVE_OPTION) {
                    timage.setText(jChooser.getSelectedFile().getAbsolutePath());
                    try {
                        showImg.setIcon(new javax.swing.ImageIcon(jChooser.getSelectedFile().getAbsolutePath()));
                    } catch (Exception e) {
                        showImg.setText("Cannot upload image");
                    }
                }
                // if the user cancelled the operation
                else
                    timage.setText("the user cancelled the operation");
            }
        });
        c.add(cimage);

        check = new javax.swing.JButton("Check");
        check.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        check.setSize(100, 30);
        check.setLocation(390, 450);
        check.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showImg.setText("");
                showImg.setIcon(null);
                String sNotify = "";
                boolean flag = true;
                tout.setText("");
                try {
                    if (tID.getText().isEmpty() == true) {
                        int throwE = 5 / 0;
                    }
                } catch (Exception e) {
                    flag = false;
                    sNotify = sNotify + "ID: " + "Re-Enter ID." + "\n";
                }
                try {
                    if (tname.getText().isEmpty() == true) {
                        int throwE = 5 / 0;
                    }
                } catch (Exception e) {
                    flag = false;
                    sNotify = sNotify + "Name: Re-Enter Name." + "\n";
                }

                try {
                    Double.parseDouble(tprice.getText());
                } catch (Exception e) {
                    flag = false;
                    sNotify = sNotify + "Price: Here you must enter number." + "\n";
                }
                try {
                    File file = new File(timage.getText());
                    if (ImageIO.read(file) == null) {
                    }
                    String s1 = "ID: " + tID.getText() + "\n" + "Name: " + tname.getText() + "\n" + "Price: "
                            + tprice.getText() + "\n" + "Quantity: " + tquantity.getValue() + "\n" + "Sale Off: "
                            + tSaleOff.getValue() + "\n";
                    tout.setText(s1);
                    showImg.setIcon(new javax.swing.ImageIcon(timage.getText()));
                } catch (Exception e) {
                    flag = false;
                    showImg.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
                    showImg.setText("Cannot upload image");
                }
                if (flag == true) {
                    String s1 = "ID: " + tID.getText() + "\n" + "Name: " + tname.getText() + "\n" + "Price: "
                            + tprice.getText() + "\n" + "Quantity: " + tquantity.getValue() + "\n" + "Sale Off: "
                            + tSaleOff.getValue() + "\n";
                    tout.setText(s1);
                } else {
                    tout.setText(sNotify);
                }
            }
        });
        c.add(check);

        sub = new javax.swing.JButton("Add");
        sub.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        sub.setSize(100, 30);
        sub.setLocation(150, 450);

        sub.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String sNotify = "";
                showImg.setText("");
                showImg.setIcon(null);
                tout.setText("");
                boolean flag = true;
                try {
                    if (tID.getText().isEmpty() == true) {
                        int throwE = 5 / 0;
                    }
                } catch (Exception e) {
                    flag = false;
                    sNotify = sNotify + "ID: " + "Re-Enter ID." + "\n";
                }
                try {
                    if (tname.getText().isEmpty() == true) {
                        int throwE = 5 / 0;
                    }
                } catch (Exception e) {
                    flag = false;
                    sNotify = sNotify + "Name: Re-Enter Name." + "\n";
                }

                try {
                    Double.parseDouble(tprice.getText());
                } catch (Exception e) {
                    flag = false;
                    sNotify = sNotify + "Price: Here you must enter number." + "\n";
                }
                try {
                    File file = new File(timage.getText());
                    if (ImageIO.read(file) == null) {
                    }
                } catch (Exception e) {
                    flag = false;
                    showImg.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
                    showImg.setText("Cannot upload image");
                }
                if (flag == true) {
                    String s1 = "ID: " + tID.getText() + "\n" + "Name: " + tname.getText() + "\n" + "Price: "
                            + tprice.getText() + "\n" + "Quantity: " + tquantity.getValue() + "\n" + "Sale Off: "
                            + tSaleOff.getValue() + "\n";
                    tout.setText(s1);
                    showImg.setIcon(new javax.swing.ImageIcon(timage.getText()));
                    // goi ham tao component va add vao menu
                    BigDecimal bigPrice = new BigDecimal(tprice.getText());
                    int Iquantity = (int) tquantity.getValue();
                    BigDecimal IsaleOff = new BigDecimal((tSaleOff.getValue() + ""));
                    PanyaCore.Product p = new PanyaCore.Product(tID.getText(), tname.getText(), bigPrice, Iquantity,
                            IsaleOff, " ", timage.getText());
                    menuData.get(0).getProducts().add(p);
                    products.add(p);
                    itemPanel.add(createPanel(menuData.get(0).getProducts().size() - 1));
                    itemScrollPanel.setViewportView(itemPanel);
                    addFrame.setVisible(false); // you can't see me!
                    PanyaCore.Menu.saveCustomProductList("Panya/src/main/resources/data/ManageData/MenuFile.json",
                            menuData);
                    PanyaCore.Product.saveProductList("Panya/src/main/resources/data/ManageData/ProductFile.json",
                            products);
                } else {
                    tout.setText(sNotify);
                }
            }
        });
        c.add(sub);

        reset = new javax.swing.JButton("Reset");
        reset.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        reset.setSize(100, 30);
        reset.setLocation(270, 450);
        reset.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tID.setText("");
                tname.setText("");
                tprice.setText("");
                tquantity.setValue(1);
                tSaleOff.setValue(0);
                timage.setText("");

                showImg.setText("");
                showImg.setIcon(null);
                tout.setText("");
            }
        });
        c.add(reset);

        tout = new javax.swing.JTextArea();
        tout.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        tout.setSize(300, 180);
        tout.setLocation(500, 100);
        tout.setLineWrap(true);
        tout.setEditable(false);
        c.add(tout);

        res = new javax.swing.JLabel("");
        res.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 20));
        res.setSize(500, 25);
        res.setLocation(100, 500);
        c.add(res);

        resadd = new javax.swing.JTextArea();
        resadd.setFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 15));
        resadd.setSize(200, 75);
        resadd.setLocation(580, 175);
        resadd.setLineWrap(true);
        c.add(resadd);

        addFrame.setVisible(true);
    }

    private void settingActionAddForm(java.awt.event.ActionEvent evt) {
        return;
    }

    private void settingActionResetForm(java.awt.event.ActionEvent evt) {
        return;
    }

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {
        java.awt.Component[] spParent = itemPanel.getComponents();
        int check = 0;
        List<Integer> lstIndexOfRemove = new ArrayList<Integer>();
        for (java.awt.Component spPanel : spParent) {
            if (spPanel instanceof javax.swing.JPanel) {
                var xOfThisPanel = (int) ((spPanel.getX()));
                var yOfThisPanel = (int) ((spPanel.getY())); // 53 la khoang cach giua cac component
                // System.out.println(xOfThisPanel + " " + yOfThisPanel); //y cach nhau 255, x
                // cot1:5 cot2:362
                var getColumn = (xOfThisPanel == 5 ? 1 : 2);
                int indexOfThisPanel = 0;
                if (getColumn == 1) {
                    indexOfThisPanel = 2 * (int) ((yOfThisPanel - 5) / 255);
                }
                if (getColumn == 2) {
                    indexOfThisPanel = 2 * (int) ((yOfThisPanel - 5) / 255) + 1;
                }
                java.awt.Component[] childrens = ((javax.swing.JPanel) spPanel).getComponents();
                for (java.awt.Component spChild : childrens) {
                    if (spChild instanceof javax.swing.JLabel) {
                        String text = ((javax.swing.JLabel) spChild).getText();
                        if (text.contains("SL:") == true) {
                            String[] txtSplit = text.split(": ");
                            int quantity = Integer.parseInt(txtSplit[1]);
                            if (quantity == 0) {
                                lstIndexOfRemove.add(indexOfThisPanel);
                                break;
                            }
                            menuData.get(0).getProducts().get(indexOfThisPanel).setQuantity(quantity);
                            products.get(indexOfThisPanel).setQuantity(quantity);
                            break;
                        }
                    }
                }
            }
        }
        for (int i = 0; i < lstIndexOfRemove.size(); i++) {
            menuData.get(0).getProducts().remove((int) lstIndexOfRemove.get(i));
            products.remove((int) lstIndexOfRemove.get(i));
            itemPanel.remove((int) lstIndexOfRemove.get(i));
            itemPanel.repaint();
        }
        // Nhớ mở lên khi nộp bài, hoặc báo cáo đồ án.

        var allProducts = Product.readProductList("Panya/src/main/resources/data/ManageData/ProductFile.json");
        var histories = History.readHistoryList("Panya/src/main/resources/data/ManageData/HistoryFile.json");
        var boughtProducts = Product.getBoughtProducts(allProducts, products);
        History.addNewHistory(histories, boughtProducts);
        History.saveHistoryList("Panya/src/main/resources/data/ManageData/HistoryFile.json", histories);

        PanyaCore.Menu.saveCustomProductList("Panya/src/main/resources/data/ManageData/MenuFile.json", menuData);
        PanyaCore.Product.saveProductList("Panya/src/main/resources/data/ManageData/ProductFile.json", products);
        subItemPanel.removeAll();
        subItemScrollPanel.setViewportView(subItemPanel);
        JButton button = (JButton) evt.getSource();
        java.awt.Component[] spChildren = button.getParent().getComponents();
        for (java.awt.Component spC : spChildren) {
            if (spC instanceof javax.swing.JLabel) {
                ((javax.swing.JLabel) spC).setText("Total Payment: (VNĐ)");
            }
        }
    }

    private void item1AddButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_item1AddButtonActionPerformed
        JButton button = (JButton) evt.getSource();
        var xOfThisPanel = (int) ((button.getParent().getX()));
        var yOfThisPanel = (int) ((button.getParent().getY())); // 53 la khoang cach giua cac component
        // System.out.println(xOfThisPanel + " " + yOfThisPanel); //y cach nhau 255, x
        // cot1:5 cot2:362
        var getColumn = (xOfThisPanel == 5 ? 1 : 2);
        int indexOfThisPanel = 0;
        if (getColumn == 1) {
            indexOfThisPanel = 2 * (int) ((yOfThisPanel - 5) / 255);
        }
        if (getColumn == 2) {
            indexOfThisPanel = 2 * (int) ((yOfThisPanel - 5) / 255) + 1;
        }
        // System.out.println(indexOfThisPanel);
        java.awt.Component[] spChildren = button.getParent().getComponents();
        // now iterate over all JTextFields...
        String quantity = "";
        for (java.awt.Component spChild : spChildren) {
            if (spChild instanceof javax.swing.JLabel) {
                String text = ((javax.swing.JLabel) spChild).getText();
                if (text.contains("SL:")) {
                    String[] slCut = text.split(": ");
                    quantity = slCut[1];
                    if (quantity.compareTo("0") == 0) {
                        // itemPanel.remove(indexOfThisPanel);
                        // menuData.get(0).getProducts().remove(indexOfThisPanel);
                        itemScrollPanel.setViewportView(itemPanel);
                        return;
                    }
                    ((javax.swing.JLabel) spChild).setText("SL: " + (Integer.parseInt(quantity) - 1));
                }
            }
        }

        createItemAddMenuPanel(menuData.get(0), indexOfThisPanel);
        calculatorPayment();
    }// GEN-LAST:event_item1AddButtonActionPerformed

    public void setListMaxQuantity(List<PanyaCore.Menu> data) {
        for (int i = 0; i < data.get(0).getProducts().size(); i++) {
            listMaxQuantity.add(data.get(0).getProducts().get(i).getQuantity());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButon;
    private javax.swing.JPanel bottomHeaderPanel;
    private javax.swing.JLabel contentHeaderLabel;
    private javax.swing.JPanel contentHeaderPanel;

    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton deleteButon;
    // private javax.swing.JScrollPane itemScrollPanel;
    private javax.swing.JButton saleOffButon;
    private javax.swing.JButton searchButon;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;

    static int countSL = 1;

    // private javax.swing.JScrollPane subItemScrollPanel;
    private javax.swing.JButton updataButon;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JPanel subItemPanel = new javax.swing.JPanel();
    private javax.swing.JScrollPane subItemScrollPanel = new javax.swing.JScrollPane();

    private javax.swing.JPanel itemPanel = new javax.swing.JPanel();
    private javax.swing.JScrollPane itemScrollPanel = new javax.swing.JScrollPane();
    List<Integer> listMaxQuantity = new ArrayList<Integer>();

    private javax.swing.JPanel paymentPanel = new javax.swing.JPanel();
    private javax.swing.JTextArea tout;
    private javax.swing.JLabel showImg;
    private javax.swing.JTextField tID;
    private javax.swing.JTextField tname;
    private javax.swing.JTextField tprice;
    private javax.swing.JSpinner tquantity;
    private Double nSale = 0.0;

}
