/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PanyaUI.StorageUI;

import java.awt.Color;
import javax.swing.ImageIcon;

import PanyaUI.PanyaContentPanel;
import PanyaUI.Theme;
import java.math.BigDecimal;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import PanyaCore.*;

/**
 *
 * @author Dao Le Viet Hoang
 */
public class StorageWindow extends javax.swing.JPanel implements PanyaContentPanel {

    Color primaryColor;
    Color darkColor;
    Color lightColor;
    Color primaryTextColor;
    Color lightTextColor;
    Color darkTextColor;
    boolean randomColor = false;
    Storage storage;

    /**
     * Creates new form OuterContentPanel
     */
    public StorageWindow() {
        initComponents();
        final String path = "Panya/src/main/resources/data/IngredientData/IngredientFile.json";
        readStorage(path);
        
        
        
    }
    public void readStorage(String path) {
        
        var ingredients = Ingredient.readIngredients(path);
        int cap = 1000;
        storage = new Storage(cap, ingredients);
        
        DefaultTableModel model = (DefaultTableModel) ingredientTable.getModel();
        for(Ingredient i : storage.getList()){
            Object[] row = {i.getId(), i.getName(), i.getQuantity().toString(), i.getUnit(), i.getPrice().toString(), i.getNote(), i.getCount_sta()};
            model.addRow(row);            
        }
    }
    
    public StorageWindow(Color primary, Color light, Color dark, boolean randomColor) {
        super();
        initComponents();
        this.initTheme(primary, light, dark);
        this.randomColor = randomColor;
        
        
    }
    
    /**
     * Chỉnh màu cho window theo phổ màu đưa vào
     * 
     * @param themeName String được lấy từ PanyaUI.Theme.getTheme
     * @see PanyaUI.Theme#getTheme(String)
     */
    public void initTheme(String themeName) {
        var theme = new Theme().getTheme(themeName);
        if (theme == null) {
            return;
        }

        final var PRIMARY = theme.get(Theme.PRIMARY);
        final var LIGHT = theme.get(Theme.LIGHT);
        final var DARK = theme.get(Theme.DARK);

        this.initTheme(PRIMARY, LIGHT, DARK);
    }
    
        /**
     * Set màu cho window theo phổ màu đưa vào. Tham số đưa vào gồm 3 loại màu:
     * chính, nhạt, đậm. Tham khảo tại <a href=
     * "https://material.io/resources/color">https://material.io/resources/color</a>
     * 
     * @param primary
     * @param light
     * @param dark
     */
    public void initTheme(Color primary, Color light, Color dark) {
        if (primary == null || light == null || dark == null) {
            return;
        }
        this.primaryColor = primary;
        this.darkColor = dark;
        this.lightColor = light;

        this.primaryTextColor = Theme.textColorFromBackgroundColor(primary);
        this.darkTextColor = Theme.textColorFromBackgroundColor(dark);
        this.lightTextColor = Theme.textColorFromBackgroundColor(light);

        this.bottomHeaderPanel.setBackground(lightColor);
        this.contentHeaderLabel.setForeground(primaryTextColor);
        this.contentHeaderPanel.setBackground(primaryColor);
        // this.contentPanel;
        // this.outerContentPanel;

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        importDialog = new javax.swing.JDialog();
        headerDialogLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        quantityImpDialogTextF = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        submitImpDialogBtn = new javax.swing.JButton();
        clearImpDialogBtn = new javax.swing.JButton();
        addDialog = new javax.swing.JDialog();
        headerDialogLabel2 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        quantityAddDialogTextF = new javax.swing.JTextField();
        nameAddDialogTextF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idAddDialogTextF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        unitAddDialogTextF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        priceAddDialogTextF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        noteAddDialogTextF = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        addAddDialogBtn = new javax.swing.JButton();
        clearAddDialogBtn = new javax.swing.JButton();
        updateDialog = new javax.swing.JDialog();
        headerDialogLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nameUpdDialogTextF = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        quantityUpdDialogTextF = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        unitUpdDialogTextF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        priceUpdDialogTextF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        noteUpdDialogTextF = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        updateUpdDialogBtn = new javax.swing.JButton();
        clearUpdDialogBtn = new javax.swing.JButton();
        searchDialog = new javax.swing.JDialog();
        headerDialogLabel4 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        quantitySearchDialogTextF = new javax.swing.JTextField();
        nameSearchDialogTextF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        idSearchDialogTextF = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        unitSearchDialogTextF = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        priceSearchDialogTextF = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        noteSearchDialogTextF = new javax.swing.JTextField();
        contentHeaderPanel = new javax.swing.JPanel();
        contentHeaderLabel = new javax.swing.JLabel();
        bottomHeaderPanel = new javax.swing.JPanel();
        contentPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        searchTextF = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        importBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        updateBtn = new javax.swing.JButton();

        importDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        importDialog.setLocationByPlatform(true);
        importDialog.setMinimumSize(new java.awt.Dimension(300, 200));
        importDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        headerDialogLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        headerDialogLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerDialogLabel.setText("Import form");
        headerDialogLabel.setAlignmentY(0.0F);
        headerDialogLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        headerDialogLabel.setMaximumSize(new java.awt.Dimension(85, 30));
        headerDialogLabel.setMinimumSize(new java.awt.Dimension(85, 30));
        headerDialogLabel.setPreferredSize(new java.awt.Dimension(85, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        importDialog.getContentPane().add(headerDialogLabel, gridBagConstraints);

        jLabel3.setText("Quantity: ");
        jLabel3.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        importDialog.getContentPane().add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        importDialog.getContentPane().add(quantityImpDialogTextF, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        submitImpDialogBtn.setText("Submit");
        submitImpDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitImpDialogBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 20);
        jPanel5.add(submitImpDialogBtn, gridBagConstraints);

        clearImpDialogBtn.setText("Clear");
        clearImpDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearImpDialogBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel5.add(clearImpDialogBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        importDialog.getContentPane().add(jPanel5, gridBagConstraints);

        addDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addDialog.setLocationByPlatform(true);
        addDialog.setMinimumSize(new java.awt.Dimension(300, 450));
        addDialog.setModal(true);
        addDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        headerDialogLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        headerDialogLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerDialogLabel2.setText("Add form");
        headerDialogLabel2.setAlignmentY(0.0F);
        headerDialogLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        headerDialogLabel2.setMaximumSize(new java.awt.Dimension(76, 25));
        headerDialogLabel2.setMinimumSize(new java.awt.Dimension(76, 25));
        headerDialogLabel2.setPreferredSize(new java.awt.Dimension(76, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        addDialog.getContentPane().add(headerDialogLabel2, gridBagConstraints);

        jPanel8.setPreferredSize(new java.awt.Dimension(410, 50));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        addDialog.getContentPane().add(jPanel8, gridBagConstraints);

        jLabel6.setText("Quantity: ");
        jLabel6.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        addDialog.getContentPane().add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        addDialog.getContentPane().add(quantityAddDialogTextF, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        addDialog.getContentPane().add(nameAddDialogTextF, gridBagConstraints);

        jLabel5.setText("Name:");
        jLabel5.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        addDialog.getContentPane().add(jLabel5, gridBagConstraints);

        jLabel7.setText("ID:");
        jLabel7.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        addDialog.getContentPane().add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        addDialog.getContentPane().add(idAddDialogTextF, gridBagConstraints);

        jLabel8.setText("Unit: ");
        jLabel8.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        addDialog.getContentPane().add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        addDialog.getContentPane().add(unitAddDialogTextF, gridBagConstraints);

        jLabel9.setText("Price: ");
        jLabel9.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        addDialog.getContentPane().add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        addDialog.getContentPane().add(priceAddDialogTextF, gridBagConstraints);

        jLabel10.setText("Note: ");
        jLabel10.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        addDialog.getContentPane().add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        addDialog.getContentPane().add(noteAddDialogTextF, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        addAddDialogBtn.setText("Add");
        addAddDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAddDialogBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 20);
        jPanel9.add(addAddDialogBtn, gridBagConstraints);

        clearAddDialogBtn.setText("Clear");
        clearAddDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAddDialogBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel9.add(clearAddDialogBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        addDialog.getContentPane().add(jPanel9, gridBagConstraints);

        updateDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        updateDialog.setLocationByPlatform(true);
        updateDialog.setMinimumSize(new java.awt.Dimension(350, 450));
        updateDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        headerDialogLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        headerDialogLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerDialogLabel3.setText("Update form");
        headerDialogLabel3.setAlignmentY(0.0F);
        headerDialogLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        headerDialogLabel3.setMaximumSize(new java.awt.Dimension(85, 30));
        headerDialogLabel3.setMinimumSize(new java.awt.Dimension(85, 30));
        headerDialogLabel3.setPreferredSize(new java.awt.Dimension(85, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        updateDialog.getContentPane().add(headerDialogLabel3, gridBagConstraints);

        jLabel11.setText("Name:");
        jLabel11.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        updateDialog.getContentPane().add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        updateDialog.getContentPane().add(nameUpdDialogTextF, gridBagConstraints);

        jLabel12.setText("Quantiy:");
        jLabel12.setMaximumSize(new java.awt.Dimension(55, 20));
        jLabel12.setMinimumSize(new java.awt.Dimension(55, 20));
        jLabel12.setPreferredSize(new java.awt.Dimension(55, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        updateDialog.getContentPane().add(jLabel12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        updateDialog.getContentPane().add(quantityUpdDialogTextF, gridBagConstraints);

        jLabel14.setText("Unit: ");
        jLabel14.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        updateDialog.getContentPane().add(jLabel14, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        updateDialog.getContentPane().add(unitUpdDialogTextF, gridBagConstraints);

        jLabel15.setText("Price: ");
        jLabel15.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        updateDialog.getContentPane().add(jLabel15, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        updateDialog.getContentPane().add(priceUpdDialogTextF, gridBagConstraints);

        jLabel16.setText("Note: ");
        jLabel16.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        updateDialog.getContentPane().add(jLabel16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        updateDialog.getContentPane().add(noteUpdDialogTextF, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        updateUpdDialogBtn.setLabel("Update");
        updateUpdDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUpdDialogBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 20);
        jPanel11.add(updateUpdDialogBtn, gridBagConstraints);

        clearUpdDialogBtn.setText("Clear");
        clearUpdDialogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearUpdDialogBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 10);
        jPanel11.add(clearUpdDialogBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        updateDialog.getContentPane().add(jPanel11, gridBagConstraints);

        searchDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        searchDialog.setLocationByPlatform(true);
        searchDialog.setMinimumSize(new java.awt.Dimension(300, 450));
        searchDialog.setModal(true);
        searchDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        headerDialogLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        headerDialogLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerDialogLabel4.setText("Search");
        headerDialogLabel4.setAlignmentY(0.0F);
        headerDialogLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        headerDialogLabel4.setMaximumSize(new java.awt.Dimension(76, 25));
        headerDialogLabel4.setMinimumSize(new java.awt.Dimension(76, 25));
        headerDialogLabel4.setPreferredSize(new java.awt.Dimension(76, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        searchDialog.getContentPane().add(headerDialogLabel4, gridBagConstraints);

        jPanel10.setPreferredSize(new java.awt.Dimension(410, 50));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        searchDialog.getContentPane().add(jPanel10, gridBagConstraints);

        jLabel13.setText("Quantity: ");
        jLabel13.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        searchDialog.getContentPane().add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        searchDialog.getContentPane().add(quantitySearchDialogTextF, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        searchDialog.getContentPane().add(nameSearchDialogTextF, gridBagConstraints);

        jLabel17.setText("Name:");
        jLabel17.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        searchDialog.getContentPane().add(jLabel17, gridBagConstraints);

        jLabel18.setText("ID:");
        jLabel18.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        searchDialog.getContentPane().add(jLabel18, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        searchDialog.getContentPane().add(idSearchDialogTextF, gridBagConstraints);

        jLabel19.setText("Unit: ");
        jLabel19.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        searchDialog.getContentPane().add(jLabel19, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        searchDialog.getContentPane().add(unitSearchDialogTextF, gridBagConstraints);

        jLabel20.setText("Price: ");
        jLabel20.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        searchDialog.getContentPane().add(jLabel20, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        searchDialog.getContentPane().add(priceSearchDialogTextF, gridBagConstraints);

        jLabel21.setText("Note: ");
        jLabel21.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 5);
        searchDialog.getContentPane().add(jLabel21, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 20);
        searchDialog.getContentPane().add(noteSearchDialogTextF, gridBagConstraints);

        setMinimumSize(new java.awt.Dimension(600, 600));
        setPreferredSize(new java.awt.Dimension(600, 324));
        setLayout(new java.awt.GridBagLayout());

        contentHeaderPanel.setBackground(new java.awt.Color(33, 150, 243));
        contentHeaderPanel.setMinimumSize(new java.awt.Dimension(600, 100));

        contentHeaderLabel.setForeground(java.awt.Color.white);
        contentHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contentHeaderLabel.setText("STORAGE ストレンジ");

        javax.swing.GroupLayout contentHeaderPanelLayout = new javax.swing.GroupLayout(contentHeaderPanel);
        contentHeaderPanel.setLayout(contentHeaderPanelLayout);
        contentHeaderPanelLayout.setHorizontalGroup(
            contentHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        contentHeaderPanelLayout.setVerticalGroup(
            contentHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        add(contentHeaderPanel, gridBagConstraints);

        bottomHeaderPanel.setBackground(new java.awt.Color(110, 198, 255));
        bottomHeaderPanel.setMinimumSize(new java.awt.Dimension(600, 50));
        bottomHeaderPanel.setPreferredSize(new java.awt.Dimension(600, 50));

        javax.swing.GroupLayout bottomHeaderPanelLayout = new javax.swing.GroupLayout(bottomHeaderPanel);
        bottomHeaderPanel.setLayout(bottomHeaderPanelLayout);
        bottomHeaderPanelLayout.setHorizontalGroup(
            bottomHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        bottomHeaderPanelLayout.setVerticalGroup(
            bottomHeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        add(bottomHeaderPanel, gridBagConstraints);

        contentPanel.setBackground(java.awt.Color.white);
        contentPanel.setMinimumSize(new java.awt.Dimension(600, 400));
        contentPanel.setPreferredSize(new java.awt.Dimension(600, 400));
        contentPanel.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        ingredientTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ingredientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Unit", "Price", "Note", "Statistics (per week)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ingredientTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ingredientTable.setMaximumSize(new java.awt.Dimension(2147483647, 600));
        ingredientTable.setPreferredSize(new java.awt.Dimension(600, 300));
        jScrollPane1.setViewportView(ingredientTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 20);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        contentPanel.add(jPanel1, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        searchTextF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchTextF.setMinimumSize(new java.awt.Dimension(450, 39));
        searchTextF.setPreferredSize(new java.awt.Dimension(450, 39));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 16);
        jPanel2.add(searchTextF, gridBagConstraints);

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 8;
        jPanel2.add(searchBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(25, 20, 10, 20);
        contentPanel.add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        addBtn.setText("Add");
        addBtn.setMaximumSize(new java.awt.Dimension(68, 37));
        addBtn.setMinimumSize(new java.awt.Dimension(68, 37));
        addBtn.setPreferredSize(new java.awt.Dimension(68, 37));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        jPanel3.add(addBtn, gridBagConstraints);

        DeleteBtn.setText("Delete");
        DeleteBtn.setMaximumSize(new java.awt.Dimension(68, 37));
        DeleteBtn.setMinimumSize(new java.awt.Dimension(68, 37));
        DeleteBtn.setPreferredSize(new java.awt.Dimension(68, 37));
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel3.add(DeleteBtn, gridBagConstraints);

        importBtn.setText("Import");
        importBtn.setMaximumSize(new java.awt.Dimension(68, 37));
        importBtn.setMinimumSize(new java.awt.Dimension(68, 37));
        importBtn.setPreferredSize(new java.awt.Dimension(68, 37));
        importBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel3.add(importBtn, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        updateBtn.setText("Update");
        updateBtn.setMaximumSize(new java.awt.Dimension(68, 37));
        updateBtn.setMinimumSize(new java.awt.Dimension(68, 37));
        updateBtn.setPreferredSize(new java.awt.Dimension(68, 37));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel4.add(updateBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 17, 20);
        contentPanel.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(contentPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        addDialog.setVisible(true);
        searchDialog.setVisible(false);
        updateDialog.setVisible(false);
        importDialog.setVisible(false);
    }//GEN-LAST:event_addBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        addDialog.setVisible(false);
        updateDialog.setVisible(false);
        importDialog.setVisible(false);
        searchDialog.setVisible(false);
        //remove
        DefaultTableModel model = (DefaultTableModel) ingredientTable.getModel();
        
        int index = ingredientTable.getSelectedRow();
        String id = model.getValueAt(index, 0).toString();      //lấy id để remove trong system
        for(int i = storage.getList().size() - 1; i >= 0; i--){
            if(storage.getList().get(i).getId().compareTo(id) == 0){
                storage.getList().remove(i);
            }
        }
        //write xuong file
        final String path = "Panya/src/main/resources/data/IngredientData/sample-IngredientFile.json";
        Ingredient.writeIngredients(path, storage.getList());

        model.removeRow(ingredientTable.getSelectedRow());
        JOptionPane.showMessageDialog(null, "Selected ingredient deleted successfully");
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        
        addDialog.setVisible(false);
        searchDialog.setVisible(false);
        updateDialog.setVisible(true);
        importDialog.setVisible(false);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void importBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBtnActionPerformed
        // TODO add your handling code here:
        addDialog.setVisible(false);
        searchDialog.setVisible(false);
        updateDialog.setVisible(false);
        importDialog.setVisible(true);
    }//GEN-LAST:event_importBtnActionPerformed

    private void addAddDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAddDialogBtnActionPerformed
        // TODO add your handling code here:
        // get infor
        String id = idAddDialogTextF.getText();
        String name = nameAddDialogTextF.getText();
        String quantity = quantityAddDialogTextF.getText();
        String unit = unitAddDialogTextF.getText();
        String price = priceAddDialogTextF.getText();
        String note = noteAddDialogTextF.getText();

        //add list
        Ingredient new_ing = new Ingredient(id, name, new BigDecimal(quantity), unit, new BigDecimal(price), note);
        new_ing.setCount_sta(0);
        storage.getList().add(new_ing);
        //add table
        DefaultTableModel model = (DefaultTableModel) ingredientTable.getModel();
        Object[] row = {new_ing.getId(), new_ing.getName(), new_ing.getQuantity(), new_ing.getUnit(), new_ing.getPrice(), new_ing.getNote(), 
            new_ing.getCount_sta()};
        model.addRow(row);    

        final String path = "Panya/src/main/resources/data/IngredientData/sample-IngredientFile.json";
        Ingredient.writeIngredients(path, storage.getList());

    }//GEN-LAST:event_addAddDialogBtnActionPerformed

    private void clearImpDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearImpDialogBtnActionPerformed
        // TODO add your handling code here:
        quantityImpDialogTextF.setText("");
    }//GEN-LAST:event_clearImpDialogBtnActionPerformed

    private void clearAddDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAddDialogBtnActionPerformed
        // TODO add your handling code here:
        idAddDialogTextF.setText("");
        nameAddDialogTextF.setText("");
        quantityAddDialogTextF.setText("");
        unitAddDialogTextF.setText("");
        priceAddDialogTextF.setText("");
        noteAddDialogTextF.setText("");
    }//GEN-LAST:event_clearAddDialogBtnActionPerformed

    private void submitImpDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitImpDialogBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ingredientTable.getModel();
        int index = ingredientTable.getSelectedRow();
        BigDecimal input_quantity = new BigDecimal(quantityImpDialogTextF.getText());     //chuyển string quantity vừa nhập thành bigdemical
        BigDecimal old_quantity = new BigDecimal(model.getValueAt(index, 2).toString());    //lấy quantity trong table
        BigDecimal new_quan = input_quantity.add(old_quantity); 
        String id = model.getValueAt(index, 0).toString();  //lấy id để import trong system
        for(int i = storage.getList().size() - 1; i >= 0; i--){
            if(storage.getList().get(i).getId().compareTo(id) == 0){
                storage.getList().get(i).setQuantity(new_quan);
            }
        }

        model.setValueAt(new_quan, ingredientTable.getSelectedRow(), 2);
        final String path = "Panya/src/main/resources/data/IngredientData/sample-IngredientFile.json";
        Ingredient.writeIngredients(path, storage.getList());
        JOptionPane.showMessageDialog(null, "Selected ingredient imported successfully");
    }//GEN-LAST:event_submitImpDialogBtnActionPerformed

    private void updateUpdDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUpdDialogBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ingredientTable.getModel();
        int index = ingredientTable.getSelectedRow();
        String id = model.getValueAt(index, 0).toString();      //lấy id để update trong system
        String new_name = nameUpdDialogTextF.getText();
        String new_quantity = quantityUpdDialogTextF.getText();
        String new_unit = unitUpdDialogTextF.getText();
        String new_price = priceUpdDialogTextF.getText();
        String new_note = noteUpdDialogTextF.getText();
        
        
        for(int i = storage.getList().size() - 1; i >= 0; i--){
            if(storage.getList().get(i).getId().compareTo(id) == 0){
                if(new_name.length() > 0){
                    model.setValueAt(new_name, ingredientTable.getSelectedRow(), 1);
                    storage.getList().get(i).setName(new_name);
                }
                if(new_quantity.length() > 0){
                    model.setValueAt(new_quantity, ingredientTable.getSelectedRow(), 2);
                    storage.getList().get(i).setQuantity(new BigDecimal(new_quantity));
                }
                if(new_unit.length() > 0){
                    model.setValueAt(new_unit, ingredientTable.getSelectedRow(), 3);
                    storage.getList().get(i).setUnit(new_unit);
                }
                if(new_price.length() > 0){
                    model.setValueAt(new_price, ingredientTable.getSelectedRow(), 4);
                    storage.getList().get(i).setPrice(new BigDecimal(new_price));
                }
                if(new_note.length() > 0){
                    model.setValueAt(new_note, ingredientTable.getSelectedRow(), 5);
                    storage.getList().get(i).setNote(new_note);
                }
            }
        }
        //lưu vào file
        final String path = "Panya/src/main/resources/data/IngredientData/sample-IngredientFile.json";
        Ingredient.writeIngredients(path, storage.getList());

        JOptionPane.showMessageDialog(null, "Selected ingredient updated successfully");
    }//GEN-LAST:event_updateUpdDialogBtnActionPerformed

    private void clearUpdDialogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearUpdDialogBtnActionPerformed
        // TODO add your handling code here:
        nameAddDialogTextF.setText("");
        quantityAddDialogTextF.setText("");
        unitAddDialogTextF.setText("");
        priceAddDialogTextF.setText("");
        noteAddDialogTextF.setText("");
    }//GEN-LAST:event_clearUpdDialogBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String user_search = searchTextF.getText();
        boolean check = false;

        for(int i = storage.getList().size() - 1; i >= 0; i--){
            if(storage.getList().get(i).getName().compareTo(user_search) == 0){
                idSearchDialogTextF.setText(storage.getList().get(i).getId());
                nameSearchDialogTextF.setText(storage.getList().get(i).getName());
                quantitySearchDialogTextF.setText(storage.getList().get(i).getQuantityString());
                unitSearchDialogTextF.setText(storage.getList().get(i).getUnit());
                priceSearchDialogTextF.setText(storage.getList().get(i).getPriceString());
                noteSearchDialogTextF.setText(storage.getList().get(i).getNote());
                check = true;
                break;
            }
        }
        if(check != true){
            JOptionPane.showMessageDialog(null, "Can't search ingredient, please try again",
                "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            addDialog.setVisible(false);
            searchDialog.setVisible(true);
            updateDialog.setVisible(false);
            importDialog.setVisible(false);
        }
    }//GEN-LAST:event_searchBtnActionPerformed
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StorageWindow().setVisible(true);

            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton DeleteBtn;
    javax.swing.JButton addAddDialogBtn;
    javax.swing.JButton addBtn;
    javax.swing.JDialog addDialog;
    javax.swing.JPanel bottomHeaderPanel;
    javax.swing.JButton clearAddDialogBtn;
    javax.swing.JButton clearImpDialogBtn;
    javax.swing.JButton clearUpdDialogBtn;
    javax.swing.JLabel contentHeaderLabel;
    javax.swing.JPanel contentHeaderPanel;
    javax.swing.JPanel contentPanel;
    javax.swing.JLabel headerDialogLabel;
    javax.swing.JLabel headerDialogLabel2;
    javax.swing.JLabel headerDialogLabel3;
    javax.swing.JLabel headerDialogLabel4;
    javax.swing.JTextField idAddDialogTextF;
    javax.swing.JTextField idSearchDialogTextF;
    javax.swing.JButton importBtn;
    javax.swing.JDialog importDialog;
    javax.swing.JTable ingredientTable;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel11;
    javax.swing.JLabel jLabel12;
    javax.swing.JLabel jLabel13;
    javax.swing.JLabel jLabel14;
    javax.swing.JLabel jLabel15;
    javax.swing.JLabel jLabel16;
    javax.swing.JLabel jLabel17;
    javax.swing.JLabel jLabel18;
    javax.swing.JLabel jLabel19;
    javax.swing.JLabel jLabel20;
    javax.swing.JLabel jLabel21;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel8;
    javax.swing.JLabel jLabel9;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel10;
    javax.swing.JPanel jPanel11;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    javax.swing.JPanel jPanel5;
    javax.swing.JPanel jPanel8;
    javax.swing.JPanel jPanel9;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTextField nameAddDialogTextF;
    javax.swing.JTextField nameSearchDialogTextF;
    javax.swing.JTextField nameUpdDialogTextF;
    javax.swing.JTextField noteAddDialogTextF;
    javax.swing.JTextField noteSearchDialogTextF;
    javax.swing.JTextField noteUpdDialogTextF;
    javax.swing.JTextField priceAddDialogTextF;
    javax.swing.JTextField priceSearchDialogTextF;
    javax.swing.JTextField priceUpdDialogTextF;
    javax.swing.JTextField quantityAddDialogTextF;
    javax.swing.JTextField quantityImpDialogTextF;
    javax.swing.JTextField quantitySearchDialogTextF;
    javax.swing.JTextField quantityUpdDialogTextF;
    javax.swing.JButton searchBtn;
    javax.swing.JDialog searchDialog;
    javax.swing.JTextField searchTextF;
    javax.swing.JButton submitImpDialogBtn;
    javax.swing.JTextField unitAddDialogTextF;
    javax.swing.JTextField unitSearchDialogTextF;
    javax.swing.JTextField unitUpdDialogTextF;
    javax.swing.JButton updateBtn;
    javax.swing.JDialog updateDialog;
    javax.swing.JButton updateUpdDialogBtn;
    // End of variables declaration//GEN-END:variables
    
}
